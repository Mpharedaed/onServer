{"ast":null,"code":"import axiosInstance from '@/plugins/axios';\nexport default {\n  data() {\n    return {\n      password: '',\n      message: ''\n    };\n  },\n  methods: {\n    async submitForm() {\n      this.message = ''; // Clear any previous messages\n      const token = this.$route.params.token;\n      try {\n        const response = await axiosInstance.post(`/reset-password/${token}`, {\n          password: this.password\n        });\n        this.message = response.data.message;\n        if (response.data.message === 'Password reset successfully') {\n          setTimeout(() => {\n            this.$router.push('/login');\n          }, 2000);\n        }\n      } catch (error) {\n        this.message = error.response ? error.response.data.message : 'An error occurred. Please try again.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axiosInstance","data","password","message","methods","submitForm","token","$route","params","response","post","setTimeout","$router","push","error"],"sources":["src/components/ResetPassword.vue"],"sourcesContent":["<!-- src/components/ResetPassword.vue -->\r\n\r\n<template>\r\n  <div class=\"reset-password-page\">\r\n    <h1>Reset Password</h1>\r\n    <form @submit.prevent=\"submitForm\">\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">New Password</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n      </div>\r\n      <button type=\"submit\" class=\"submit-button\">Reset Password</button>\r\n    </form>\r\n    <p v-if=\"message\" class=\"message\">{{ message }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axiosInstance from '@/plugins/axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      password: '',\r\n      message: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n      this.message = '';  // Clear any previous messages\r\n      const token = this.$route.params.token;\r\n      try {\r\n        const response = await axiosInstance.post(`/reset-password/${token}`, {\r\n          password: this.password\r\n        });\r\n        this.message = response.data.message;\r\n        if (response.data.message === 'Password reset successfully') {\r\n          setTimeout(() => {\r\n            this.$router.push('/login');\r\n          }, 2000);\r\n        }\r\n      } catch (error) {\r\n        this.message = error.response ? error.response.data.message : 'An error occurred. Please try again.';\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add your styles here */\r\n</style>\r\n"],"mappings":"AAiBA,OAAAA,aAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAA;MACA,KAAAF,OAAA;MACA,MAAAG,KAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAF,KAAA;MACA;QACA,MAAAG,QAAA,SAAAT,aAAA,CAAAU,IAAA,oBAAAJ,KAAA;UACAJ,QAAA,OAAAA;QACA;QACA,KAAAC,OAAA,GAAAM,QAAA,CAAAR,IAAA,CAAAE,OAAA;QACA,IAAAM,QAAA,CAAAR,IAAA,CAAAE,OAAA;UACAQ,UAAA;YACA,KAAAC,OAAA,CAAAC,IAAA;UACA;QACA;MACA,SAAAC,KAAA;QACA,KAAAX,OAAA,GAAAW,KAAA,CAAAL,QAAA,GAAAK,KAAA,CAAAL,QAAA,CAAAR,IAAA,CAAAE,OAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}