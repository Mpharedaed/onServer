{"ast":null,"code":"import axios from 'axios';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      posts: [],\n      error: null\n    };\n  },\n  computed: {\n    ...mapGetters(['isAuthenticated', 'authToken', 'user'])\n  },\n  methods: {\n    async fetchUserPosts() {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/user/posts', {\n          headers: {\n            Authorization: `Bearer ${this.authToken}`\n          }\n        });\n        console.log('API response:', response); // Log the full response\n        this.posts = response.data.posts;\n        console.log('Fetched posts:', this.posts);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n        this.error = 'Failed to fetch posts. Please try again later.';\n      }\n    }\n  },\n  created() {\n    if (this.isAuthenticated) {\n      if (this.user) {\n        console.log('User data:', this.user);\n        this.fetchUserPosts();\n      } else {\n        this.error = 'User data not found.';\n      }\n    } else {\n      this.error = 'You need to be logged in to view this page.';\n    }\n  }\n};","map":{"version":3,"names":["axios","mapGetters","name","data","posts","error","computed","methods","fetchUserPosts","response","get","headers","Authorization","authToken","console","log","created","isAuthenticated","user"],"sources":["src/components/UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-profile\">\r\n    <h2 v-if=\"user\">{{ user.name }}'s Profile</h2>\r\n    <div v-if=\"error\">\r\n      <p class=\"error\">{{ error }}</p>\r\n    </div>\r\n    <div v-else-if=\"posts.length\">\r\n      <h3>Your Posts</h3>\r\n      <ul>\r\n        <li v-for=\"post in posts\" :key=\"post.id\">\r\n          <h4>{{ post.content }}</h4>\r\n          <p>{{ post.created_at }}</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div v-else>\r\n      <p>You have no posts.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  name: 'UserProfile',\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      error: null,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['isAuthenticated', 'authToken', 'user']),\r\n  },\r\n  methods: {\r\n    async fetchUserPosts() {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:5000/api/user/posts', {\r\n          headers: {\r\n            Authorization: `Bearer ${this.authToken}`\r\n          }\r\n        });\r\n        console.log('API response:', response); // Log the full response\r\n        this.posts = response.data.posts;\r\n        console.log('Fetched posts:', this.posts);\r\n      } catch (error) {\r\n        console.error('Error fetching posts:', error);\r\n        this.error = 'Failed to fetch posts. Please try again later.';\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    if (this.isAuthenticated) {\r\n      if (this.user) {\r\n        console.log('User data:', this.user);\r\n        this.fetchUserPosts();\r\n      } else {\r\n        this.error = 'User data not found.';\r\n      }\r\n    } else {\r\n      this.error = 'You need to be logged in to view this page.';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-profile {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n}\r\n</style>\r\n"],"mappings":"AAsBA,OAAAA,KAAA;AACA,SAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAL,UAAA;EACA;EACAM,OAAA;IACA,MAAAC,eAAA;MACA;QACA,MAAAC,QAAA,SAAAT,KAAA,CAAAU,GAAA;UACAC,OAAA;YACAC,aAAA,iBAAAC,SAAA;UACA;QACA;QACAC,OAAA,CAAAC,GAAA,kBAAAN,QAAA;QACA,KAAAL,KAAA,GAAAK,QAAA,CAAAN,IAAA,CAAAC,KAAA;QACAU,OAAA,CAAAC,GAAA,wBAAAX,KAAA;MACA,SAAAC,KAAA;QACAS,OAAA,CAAAT,KAAA,0BAAAA,KAAA;QACA,KAAAA,KAAA;MACA;IACA;EACA;EACAW,QAAA;IACA,SAAAC,eAAA;MACA,SAAAC,IAAA;QACAJ,OAAA,CAAAC,GAAA,oBAAAG,IAAA;QACA,KAAAV,cAAA;MACA;QACA,KAAAH,KAAA;MACA;IACA;MACA,KAAAA,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}