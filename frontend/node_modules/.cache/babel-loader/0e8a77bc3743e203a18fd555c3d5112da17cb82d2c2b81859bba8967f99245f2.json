{"ast":null,"code":"export default {\n  name: 'StoryModal',\n  props: {\n    showStory: Boolean\n  },\n  data() {\n    return {\n      showQuestionnaire: false,\n      currentStep: 0,\n      answers: {},\n      // Changed to an object for better data handling\n      questions: [{\n        title: 'مرحباً! لنخصص تجربتك.',\n        text: 'ما هي أهدافك الرئيسية في الحياة حالياً؟',\n        type: 'checkbox',\n        options: ['تطوير مهني', 'تحسين الصحة النفسية', 'بناء الثقة', 'تطوير القيادة', 'إدارة الوقت', 'تعلم مهارات جديدة']\n      }, {\n        title: 'رائع!',\n        text: 'ما هو أكبر تحدي تواجهه الآن؟',\n        type: 'options',\n        options: ['قلة التركيز', 'القلق', 'نقص الحافز', 'تحديد الأهداف', 'توازن الحياة والعمل']\n      }, {\n        title: 'شكراً لمشاركتك.',\n        text: 'من فضلك أدخل بريدك الإلكتروني لنتمكن من التواصل معك.',\n        type: 'input',\n        inputType: 'email',\n        placeholder: 'ادخل بريدك الإلكتروني'\n      }, {\n        title: 'متى تفضل أن نتواصل معك؟',\n        type: 'date'\n      }]\n    };\n  },\n  computed: {\n    currentQuestion() {\n      return this.questions[this.currentStep];\n    },\n    isLastStep() {\n      return this.currentStep === this.questions.length - 1;\n    },\n    isStepValid() {\n      const answer = this.answers[this.currentStep];\n      if (this.currentQuestion.type === 'input') {\n        return !!answer && this.validateEmail(answer);\n      } else if (this.currentQuestion.type === 'date') {\n        return !!answer;\n      } else if (this.currentQuestion.type === 'checkbox') {\n        return Array.isArray(answer) && answer.length > 0;\n      } else if (this.currentQuestion.type === 'options') {\n        return !!answer;\n      }\n      return false;\n    }\n  },\n  methods: {\n    initializeAnswer(step) {\n      const question = this.questions[step];\n      if (this.answers[step] === undefined) {\n        if (question.type === 'checkbox') {\n          this.$set(this.answers, step, []);\n        } else {\n          this.$set(this.answers, step, '');\n        }\n      }\n    },\n    closeModal() {\n      this.$emit('close');\n      this.showQuestionnaire = false;\n      this.currentStep = 0;\n      this.answers = {};\n      document.body.style.overflow = 'auto';\n    },\n    openQuestionnaire() {\n      this.showQuestionnaire = true;\n      this.currentStep = 0;\n      this.answers = {};\n      this.initializeAnswer(this.currentStep);\n    },\n    nextStep() {\n      if (this.isStepValid) {\n        if (this.currentStep < this.questions.length - 1) {\n          this.currentStep++;\n          this.initializeAnswer(this.currentStep);\n        }\n      }\n    },\n    prevStep() {\n      if (this.currentStep > 0) {\n        this.currentStep--;\n      }\n    },\n    validateEmail(email) {\n      const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return re.test(email);\n    },\n    submit() {\n      if (this.isStepValid) {\n        const userData = {\n          answers: this.answers,\n          email: this.answers[2]\n        };\n        console.log('User Data:', userData);\n        // Here you can send the data to your server or perform any action you need.\n        this.closeModal();\n      }\n    }\n  },\n  mounted() {\n    // Initialize the answers for the first question\n    this.initializeAnswer(this.currentStep);\n  },\n  watch: {\n    currentStep(newStep) {\n      this.initializeAnswer(newStep);\n    }\n  }\n};","map":{"version":3,"names":["name","props","showStory","Boolean","data","showQuestionnaire","currentStep","answers","questions","title","text","type","options","inputType","placeholder","computed","currentQuestion","isLastStep","length","isStepValid","answer","validateEmail","Array","isArray","methods","initializeAnswer","step","question","undefined","$set","closeModal","$emit","document","body","style","overflow","openQuestionnaire","nextStep","prevStep","email","re","test","submit","userData","console","log","mounted","watch","newStep"],"sources":["src/components/StoryModal.vue"],"sourcesContent":["<template>\n  <div v-if=\"showStory || showQuestionnaire\" class=\"modal-container\" @click.self=\"closeModal\">\n    <!-- Story Content -->\n    <transition name=\"fade\" mode=\"out-in\">\n      <div v-if=\"!showQuestionnaire\" class=\"story-content rtl\" key=\"story\">\n        <button class=\"close-button\" @click=\"closeModal\">&times;</button>\n        <h2 class=\"story-title\">عن دولت عماد</h2>\n        <p class=\"story-text\">\n          دولت عماد هي كوتش حياة شغوفة، مخصصة إنها تساعد الناس يكتشفوا إمكانياتهم الحقيقية ويحققوا أحلامهم. بأسلوب بسيط وجميل بيجمع بين التعاطف والخبرة، دولت بتمكن عملاءها من تجاوز التحديات واكتشاف قوتهم الداخلية.\n        </p>\n        <h3 class=\"story-subheading\">تخصصات دولت تشمل:</h3>\n        <ul class=\"story-list\">\n          <li><strong>بناء الثقة:</strong> بتساعد السيدات يستعيدوا قوتهم وصوتهم في الحياة الشخصية والمهنية.</li>\n          <li><strong>الكوتشينج المهني:</strong> بترشد الأفراد في تحديد أهدافهم المهنية وتوجيه حياتهم العملية ناحية شغفهم.</li>\n          <li><strong>الصحة النفسية:</strong> بتدعم عملاءها في إدارة التوتر والقلق وتعدي المراحل الصعبة في حياتهم بأساليب مخصصة للمرونة النفسية.</li>\n          <li><strong>تطوير القيادة:</strong> بتمكن السيدات والقادة الجدد إنهم يمسكوا مناصب قيادية بشجاعة وثقة.</li>\n        </ul>\n        <p class=\"story-text\">\n          دولت معروفة بأسلوبها الدافئ والداعم. بتقدم مش بس أدوات عملية، لكن كمان بتدي الدعم النفسي اللي عملاءها بيحتاجوه عشان يحققوا النجاح.\n        </p>\n        <button class=\"story-button\" @click=\"openQuestionnaire\">ابدأ رحلتك الآن</button>\n      </div>\n    </transition>\n\n    <!-- Questionnaire Content -->\n    <transition name=\"slide\" mode=\"out-in\">\n      <div v-if=\"showQuestionnaire\" class=\"questionnaire-content rtl\" key=\"questionnaire\">\n        <button class=\"close-button\" @click=\"closeModal\">&times;</button>\n        <transition name=\"fade\" mode=\"out-in\">\n          <div :key=\"currentStep\" class=\"step-content\">\n            <h2 class=\"question-title\">{{ currentQuestion.title }}</h2>\n            <div class=\"question-body\">\n              <p v-if=\"currentQuestion.text\">{{ currentQuestion.text }}</p>\n              <!-- Options -->\n              <div v-if=\"currentQuestion.type === 'options'\" class=\"options-list\">\n                <div\n                  v-for=\"(option, index) in currentQuestion.options\"\n                  :key=\"index\"\n                  class=\"option-item\"\n                >\n                  <input\n                    type=\"radio\"\n                    :id=\"`option-${currentStep}-${index}`\"\n                    :name=\"`question-${currentStep}`\"\n                    :value=\"option\"\n                    v-model=\"answers[currentStep]\"\n                  />\n                  <label :for=\"`option-${currentStep}-${index}`\">{{ option }}</label>\n                </div>\n              </div>\n              <!-- Input -->\n              <div v-if=\"currentQuestion.type === 'input'\">\n                <input\n                  v-model=\"answers[currentStep]\"\n                  :type=\"currentQuestion.inputType\"\n                  :placeholder=\"currentQuestion.placeholder\"\n                  class=\"text-input\"\n                />\n              </div>\n              <!-- Multiple Choice -->\n              <div v-if=\"currentQuestion.type === 'checkbox'\" class=\"checkbox-list\">\n                <div\n                  v-for=\"(option, index) in currentQuestion.options\"\n                  :key=\"index\"\n                  class=\"checkbox-option\"\n                >\n                  <input\n                    type=\"checkbox\"\n                    :id=\"`checkbox-${currentStep}-${index}`\"\n                    :value=\"option\"\n                    v-model=\"answers[currentStep]\"\n                  />\n                  <label :for=\"`checkbox-${currentStep}-${index}`\">{{ option }}</label>\n                </div>\n              </div>\n              <!-- Date Picker -->\n              <div v-if=\"currentQuestion.type === 'date'\">\n                <input\n                  v-model=\"answers[currentStep]\"\n                  type=\"date\"\n                  class=\"date-input\"\n                />\n              </div>\n            </div>\n            <div class=\"navigation-buttons\">\n              <button v-if=\"currentStep > 0\" @click=\"prevStep\" class=\"prev-button\">السابق</button>\n              <button\n                v-if=\"!isLastStep\"\n                @click=\"nextStep\"\n                class=\"next-button\"\n                :disabled=\"!isStepValid\"\n              >\n                التالي\n              </button>\n              <button\n                v-if=\"isLastStep\"\n                @click=\"submit\"\n                class=\"submit-button\"\n                :disabled=\"!isStepValid\"\n              >\n                إرسال\n              </button>\n            </div>\n          </div>\n        </transition>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'StoryModal',\n  props: {\n    showStory: Boolean,\n  },\n  data() {\n    return {\n      showQuestionnaire: false,\n      currentStep: 0,\n      answers: {}, // Changed to an object for better data handling\n      questions: [\n        {\n          title: 'مرحباً! لنخصص تجربتك.',\n          text: 'ما هي أهدافك الرئيسية في الحياة حالياً؟',\n          type: 'checkbox',\n          options: [\n            'تطوير مهني',\n            'تحسين الصحة النفسية',\n            'بناء الثقة',\n            'تطوير القيادة',\n            'إدارة الوقت',\n            'تعلم مهارات جديدة',\n          ],\n        },\n        {\n          title: 'رائع!',\n          text: 'ما هو أكبر تحدي تواجهه الآن؟',\n          type: 'options',\n          options: ['قلة التركيز', 'القلق', 'نقص الحافز', 'تحديد الأهداف', 'توازن الحياة والعمل'],\n        },\n        {\n          title: 'شكراً لمشاركتك.',\n          text: 'من فضلك أدخل بريدك الإلكتروني لنتمكن من التواصل معك.',\n          type: 'input',\n          inputType: 'email',\n          placeholder: 'ادخل بريدك الإلكتروني',\n        },\n        {\n          title: 'متى تفضل أن نتواصل معك؟',\n          type: 'date',\n        },\n      ],\n    };\n  },\n  computed: {\n    currentQuestion() {\n      return this.questions[this.currentStep];\n    },\n    isLastStep() {\n      return this.currentStep === this.questions.length - 1;\n    },\n    isStepValid() {\n      const answer = this.answers[this.currentStep];\n      if (this.currentQuestion.type === 'input') {\n        return !!answer && this.validateEmail(answer);\n      } else if (this.currentQuestion.type === 'date') {\n        return !!answer;\n      } else if (this.currentQuestion.type === 'checkbox') {\n        return Array.isArray(answer) && answer.length > 0;\n      } else if (this.currentQuestion.type === 'options') {\n        return !!answer;\n      }\n      return false;\n    },\n  },\n  methods: {\n    initializeAnswer(step) {\n      const question = this.questions[step];\n      if (this.answers[step] === undefined) {\n        if (question.type === 'checkbox') {\n          this.$set(this.answers, step, []);\n        } else {\n          this.$set(this.answers, step, '');\n        }\n      }\n    },\n    closeModal() {\n      this.$emit('close');\n      this.showQuestionnaire = false;\n      this.currentStep = 0;\n      this.answers = {};\n      document.body.style.overflow = 'auto';\n    },\n    openQuestionnaire() {\n      this.showQuestionnaire = true;\n      this.currentStep = 0;\n      this.answers = {};\n      this.initializeAnswer(this.currentStep);\n    },\n    nextStep() {\n      if (this.isStepValid) {\n        if (this.currentStep < this.questions.length - 1) {\n          this.currentStep++;\n          this.initializeAnswer(this.currentStep);\n        }\n      }\n    },\n    prevStep() {\n      if (this.currentStep > 0) {\n        this.currentStep--;\n      }\n    },\n    validateEmail(email) {\n      const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return re.test(email);\n    },\n    submit() {\n      if (this.isStepValid) {\n        const userData = {\n          answers: this.answers,\n          email: this.answers[2],\n        };\n        console.log('User Data:', userData);\n        // Here you can send the data to your server or perform any action you need.\n        this.closeModal();\n      }\n    },\n  },\n  mounted() {\n    // Initialize the answers for the first question\n    this.initializeAnswer(this.currentStep);\n  },\n  watch: {\n    currentStep(newStep) {\n      this.initializeAnswer(newStep);\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Your existing styles here */\n</style>\n\n\n<style scoped>\n/* General Modal Styles */\n.modal-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(30, 30, 30, 0.9);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n/* Story and Questionnaire Content */\n.story-content,\n.questionnaire-content {\n  background: #fff;\n  width: 90%;\n  max-width: 800px;\n  padding: 2rem 3rem;\n  border-radius: 20px;\n  position: relative;\n  animation: fadeInUp 0.5s ease-in-out;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n/* Close Button */\n.close-button {\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  background: none;\n  border: none;\n  font-size: 2rem;\n  color: #999;\n  cursor: pointer;\n  z-index: 1100;\n  transition: color 0.3s ease;\n}\n.close-button:hover {\n  color: #333;\n}\n\n/* Titles */\n.story-title,\n.question-title {\n  font-size: 2.5rem;\n  margin-bottom: 1rem;\n  font-family: 'Cairo', sans-serif;\n  font-weight: 700;\n  color: #333;\n  text-align: center;\n}\n\n/* Text */\n.story-text,\n.question-body p {\n  font-size: 1.2rem;\n  line-height: 1.8;\n  color: #555;\n  margin-bottom: 1.5rem;\n  font-family: 'Cairo', sans-serif;\n  text-align: center;\n}\n\n/* Story List */\n.story-list {\n  list-style: none;\n  padding: 0;\n  margin-bottom: 2rem;\n}\n\n.story-list li {\n  font-size: 1.2rem;\n  line-height: 1.8;\n  margin-bottom: 1rem;\n  position: relative;\n  padding-right: 1.5rem;\n  font-family: 'Cairo', sans-serif;\n  color: #333;\n}\n.story-list li::before {\n  content: '✔';\n  position: absolute;\n  right: 0;\n  color: #ff6f61;\n  font-size: 1.5rem;\n}\n\n/* Story Button */\n.story-button {\n  background-color: #ff6f61;\n  color: #fff;\n  padding: 0.8rem 2rem;\n  border-radius: 30px;\n  font-size: 1rem;\n  transition: background-color 0.3s ease;\n  text-decoration: none;\n  display: inline-block;\n  cursor: pointer;\n  margin: 0 auto;\n  display: block;\n}\n.story-button:hover {\n  background-color: #e65b50;\n}\n\n/* Questionnaire Styles */\n.option-item,\n.checkbox-option {\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n  width: 100%;\n  max-width: 400px;\n}\n\n.option-item input[type='radio'],\n.checkbox-option input[type='checkbox'] {\n  accent-color: #ff6f61;\n  margin-left: 1rem;\n  transform: scale(1.2);\n}\n\n.option-item label,\n.checkbox-option label {\n  font-size: 1.2rem;\n  color: #333;\n  font-family: 'Cairo', sans-serif;\n  flex: 1;\n  text-align: right;\n}\n\n.text-input,\n.date-input {\n  width: 100%;\n  max-width: 400px;\n  padding: 0.7rem 1rem;\n  font-size: 1rem;\n  border: 1px solid #ccc;\n  border-radius: 30px;\n  outline: none;\n  text-align: center;\n  margin: 0 auto 1rem;\n  display: block;\n}\n\n/* Navigation Buttons */\n.navigation-buttons {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 1.5rem;\n}\n\n.prev-button,\n.next-button,\n.submit-button {\n  background-color: #ff6f61;\n  color: #fff;\n  padding: 0.7rem 1.5rem;\n  border: none;\n  border-radius: 30px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n.prev-button:hover,\n.next-button:hover,\n.submit-button:hover {\n  background-color: #e65b50;\n}\n.prev-button:disabled,\n.next-button:disabled,\n.submit-button:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n\n/* Animations */\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translate3d(0, 20px, 0);\n  }\n  to {\n    opacity: 1;\n    transform: translateZ(0);\n  }\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.5s ease;\n}\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\n\n.slide-enter-active,\n.slide-leave-active {\n  transition: all 0.5s ease;\n}\n.slide-enter,\n.slide-leave-to {\n  transform: translateY(100%);\n  opacity: 0;\n}\n\n/* Responsive Styles */\n@media (max-width: 768px) {\n  .story-content,\n  .questionnaire-content {\n    padding: 1rem;\n    max-width: 100%;\n    border-radius: 10px;\n  }\n\n  .story-title,\n  .question-title {\n    font-size: 2rem;\n  }\n\n  .option-item label,\n  .checkbox-option label {\n    font-size: 1rem;\n  }\n\n  .text-input,\n  .date-input {\n    font-size: 0.9rem;\n    padding: 0.6rem 1rem;\n  }\n\n  .navigation-buttons button {\n    font-size: 0.9rem;\n    padding: 0.6rem 1.2rem;\n  }\n\n  .close-button {\n    font-size: 1.5rem;\n    padding: 8px;\n  }\n}\n\n@media (max-width: 480px) {\n  .story-title,\n  .question-title {\n    font-size: 1.8rem;\n  }\n\n  .option-item label,\n  .checkbox-option label {\n    font-size: 0.9rem;\n  }\n\n  .text-input,\n  .date-input {\n    font-size: 0.8rem;\n    padding: 0.5rem 0.8rem;\n  }\n\n  .navigation-buttons button {\n    font-size: 0.8rem;\n    padding: 0.5rem 1rem;\n  }\n\n  .close-button {\n    font-size: 1.3rem;\n    padding: 6px;\n  }\n}\n</style>\n"],"mappings":"AA+GA;EACAA,IAAA;EACAC,KAAA;IACAC,SAAA,EAAAC;EACA;EACAC,KAAA;IACA;MACAC,iBAAA;MACAC,WAAA;MACAC,OAAA;MAAA;MACAC,SAAA,GACA;QACAC,KAAA;QACAC,IAAA;QACAC,IAAA;QACAC,OAAA,GACA,cACA,uBACA,cACA,iBACA,eACA;MAEA,GACA;QACAH,KAAA;QACAC,IAAA;QACAC,IAAA;QACAC,OAAA;MACA,GACA;QACAH,KAAA;QACAC,IAAA;QACAC,IAAA;QACAE,SAAA;QACAC,WAAA;MACA,GACA;QACAL,KAAA;QACAE,IAAA;MACA;IAEA;EACA;EACAI,QAAA;IACAC,gBAAA;MACA,YAAAR,SAAA,MAAAF,WAAA;IACA;IACAW,WAAA;MACA,YAAAX,WAAA,UAAAE,SAAA,CAAAU,MAAA;IACA;IACAC,YAAA;MACA,MAAAC,MAAA,QAAAb,OAAA,MAAAD,WAAA;MACA,SAAAU,eAAA,CAAAL,IAAA;QACA,SAAAS,MAAA,SAAAC,aAAA,CAAAD,MAAA;MACA,gBAAAJ,eAAA,CAAAL,IAAA;QACA,SAAAS,MAAA;MACA,gBAAAJ,eAAA,CAAAL,IAAA;QACA,OAAAW,KAAA,CAAAC,OAAA,CAAAH,MAAA,KAAAA,MAAA,CAAAF,MAAA;MACA,gBAAAF,eAAA,CAAAL,IAAA;QACA,SAAAS,MAAA;MACA;MACA;IACA;EACA;EACAI,OAAA;IACAC,iBAAAC,IAAA;MACA,MAAAC,QAAA,QAAAnB,SAAA,CAAAkB,IAAA;MACA,SAAAnB,OAAA,CAAAmB,IAAA,MAAAE,SAAA;QACA,IAAAD,QAAA,CAAAhB,IAAA;UACA,KAAAkB,IAAA,MAAAtB,OAAA,EAAAmB,IAAA;QACA;UACA,KAAAG,IAAA,MAAAtB,OAAA,EAAAmB,IAAA;QACA;MACA;IACA;IACAI,WAAA;MACA,KAAAC,KAAA;MACA,KAAA1B,iBAAA;MACA,KAAAC,WAAA;MACA,KAAAC,OAAA;MACAyB,QAAA,CAAAC,IAAA,CAAAC,KAAA,CAAAC,QAAA;IACA;IACAC,kBAAA;MACA,KAAA/B,iBAAA;MACA,KAAAC,WAAA;MACA,KAAAC,OAAA;MACA,KAAAkB,gBAAA,MAAAnB,WAAA;IACA;IACA+B,SAAA;MACA,SAAAlB,WAAA;QACA,SAAAb,WAAA,QAAAE,SAAA,CAAAU,MAAA;UACA,KAAAZ,WAAA;UACA,KAAAmB,gBAAA,MAAAnB,WAAA;QACA;MACA;IACA;IACAgC,SAAA;MACA,SAAAhC,WAAA;QACA,KAAAA,WAAA;MACA;IACA;IACAe,cAAAkB,KAAA;MACA,MAAAC,EAAA;MACA,OAAAA,EAAA,CAAAC,IAAA,CAAAF,KAAA;IACA;IACAG,OAAA;MACA,SAAAvB,WAAA;QACA,MAAAwB,QAAA;UACApC,OAAA,OAAAA,OAAA;UACAgC,KAAA,OAAAhC,OAAA;QACA;QACAqC,OAAA,CAAAC,GAAA,eAAAF,QAAA;QACA;QACA,KAAAb,UAAA;MACA;IACA;EACA;EACAgB,QAAA;IACA;IACA,KAAArB,gBAAA,MAAAnB,WAAA;EACA;EACAyC,KAAA;IACAzC,YAAA0C,OAAA;MACA,KAAAvB,gBAAA,CAAAuB,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}