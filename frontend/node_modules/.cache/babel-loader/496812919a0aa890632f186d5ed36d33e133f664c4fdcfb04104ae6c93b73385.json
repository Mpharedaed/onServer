{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      posts: []\n    };\n  },\n  methods: {\n    async fetchPosts() {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/api/posts', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        this.posts = response.data;\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    },\n    async likePost(postId) {\n      try {\n        const token = localStorage.getItem('token');\n        await axios.post(`http://localhost:5000/api/posts/${postId}/like`, {}, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        this.fetchPosts(); // Refresh posts\n      } catch (error) {\n        console.error('Error liking post:', error);\n      }\n    },\n    async commentPost(postId) {\n      const comment = prompt(\"Enter your comment:\");\n      if (comment) {\n        try {\n          const token = localStorage.getItem('token');\n          await axios.post(`http://localhost:5000/api/posts/${postId}/comment`, {\n            comment: comment\n          }, {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          this.fetchPosts(); // Refresh posts\n        } catch (error) {\n          console.error('Error commenting on post:', error);\n        }\n      }\n    },\n    async editPost(postId) {\n      const newContent = prompt(\"Enter new content:\");\n      if (newContent) {\n        try {\n          const token = localStorage.getItem('token');\n          await axios.put(`http://localhost:5000/api/posts/${postId}`, {\n            content: newContent\n          }, {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          this.fetchPosts(); // Refresh posts\n        } catch (error) {\n          console.error('Error editing post:', error);\n        }\n      }\n    },\n    async deletePost(postId) {\n      if (confirm(\"Are you sure you want to delete this post?\")) {\n        try {\n          const token = localStorage.getItem('token');\n          await axios.delete(`http://localhost:5000/api/posts/${postId}`, {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          this.fetchPosts(); // Refresh posts\n        } catch (error) {\n          console.error('Error deleting post:', error);\n        }\n      }\n    }\n  },\n  mounted() {\n    this.fetchPosts();\n  }\n};","map":{"version":3,"names":["axios","data","posts","methods","fetchPosts","token","localStorage","getItem","response","get","headers","error","console","likePost","postId","post","commentPost","comment","prompt","editPost","newContent","put","content","deletePost","confirm","delete","mounted"],"sources":["src/components/ViewPost.vue"],"sourcesContent":["<template>\r\n    <div class=\"view-posts-container\">\r\n      <h2>All Posts</h2>\r\n      <div v-for=\"post in posts\" :key=\"post.id\" class=\"post-item\">\r\n        <h3>{{ post.content }}</h3>\r\n        <p><strong>Tags:</strong> {{ post.tags.join(', ') }}</p>\r\n        <p><img :src=\"post.image_url\" alt=\"Post Image\" v-if=\"post.image_url\"></p>\r\n        <button @click=\"likePost(post.id)\">Like</button>\r\n        <button @click=\"commentPost(post.id)\">Comment</button>\r\n        <button @click=\"editPost(post.id)\">Edit</button>\r\n        <button @click=\"deletePost(post.id)\">Delete</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        posts: [],\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchPosts() {\r\n        try {\r\n          const token = localStorage.getItem('token');\r\n          const response = await axios.get('http://localhost:5000/api/posts', {\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`\r\n            }\r\n          });\r\n          this.posts = response.data;\r\n        } catch (error) {\r\n          console.error('Error fetching posts:', error);\r\n        }\r\n      },\r\n      async likePost(postId) {\r\n        try {\r\n          const token = localStorage.getItem('token');\r\n          await axios.post(`http://localhost:5000/api/posts/${postId}/like`, {}, {\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`\r\n            }\r\n          });\r\n          this.fetchPosts(); // Refresh posts\r\n        } catch (error) {\r\n          console.error('Error liking post:', error);\r\n        }\r\n      },\r\n      async commentPost(postId) {\r\n        const comment = prompt(\"Enter your comment:\");\r\n        if (comment) {\r\n          try {\r\n            const token = localStorage.getItem('token');\r\n            await axios.post(`http://localhost:5000/api/posts/${postId}/comment`, {\r\n              comment: comment\r\n            }, {\r\n              headers: {\r\n              'Authorization': `Bearer ${token}`\r\n            }\r\n            });\r\n            this.fetchPosts(); // Refresh posts\r\n          } catch (error) {\r\n            console.error('Error commenting on post:', error);\r\n          }\r\n        }\r\n      },\r\n      async editPost(postId) {\r\n        const newContent = prompt(\"Enter new content:\");\r\n        if (newContent) {\r\n          try {\r\n            const token = localStorage.getItem('token');\r\n            await axios.put(`http://localhost:5000/api/posts/${postId}`, {\r\n              content: newContent\r\n            }, {\r\n              headers: {\r\n                'Authorization': `Bearer ${token}`\r\n              }\r\n            });\r\n            this.fetchPosts(); // Refresh posts\r\n          } catch (error) {\r\n            console.error('Error editing post:', error);\r\n          }\r\n        }\r\n      },\r\n      async deletePost(postId) {\r\n        if (confirm(\"Are you sure you want to delete this post?\")) {\r\n          try {\r\n            const token = localStorage.getItem('token');\r\n            await axios.delete(`http://localhost:5000/api/posts/${postId}`, {\r\n              headers: {\r\n                'Authorization': `Bearer ${token}`\r\n              }\r\n            });\r\n            this.fetchPosts(); // Refresh posts\r\n          } catch (error) {\r\n            console.error('Error deleting post:', error);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      this.fetchPosts();\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .view-posts-container {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    padding: 1rem;\r\n  }\r\n  .post-item {\r\n    border: 1px solid #ccc;\r\n    padding: 1rem;\r\n    margin-bottom: 1rem;\r\n    border-radius: 4px;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAgBA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAA;MACA;QACA,MAAAC,KAAA,GAAAC,YAAA,CAAAC,OAAA;QACA,MAAAC,QAAA,SAAAR,KAAA,CAAAS,GAAA;UACAC,OAAA;YACA,2BAAAL,KAAA;UACA;QACA;QACA,KAAAH,KAAA,GAAAM,QAAA,CAAAP,IAAA;MACA,SAAAU,KAAA;QACAC,OAAA,CAAAD,KAAA,0BAAAA,KAAA;MACA;IACA;IACA,MAAAE,SAAAC,MAAA;MACA;QACA,MAAAT,KAAA,GAAAC,YAAA,CAAAC,OAAA;QACA,MAAAP,KAAA,CAAAe,IAAA,oCAAAD,MAAA;UACAJ,OAAA;YACA,2BAAAL,KAAA;UACA;QACA;QACA,KAAAD,UAAA;MACA,SAAAO,KAAA;QACAC,OAAA,CAAAD,KAAA,uBAAAA,KAAA;MACA;IACA;IACA,MAAAK,YAAAF,MAAA;MACA,MAAAG,OAAA,GAAAC,MAAA;MACA,IAAAD,OAAA;QACA;UACA,MAAAZ,KAAA,GAAAC,YAAA,CAAAC,OAAA;UACA,MAAAP,KAAA,CAAAe,IAAA,oCAAAD,MAAA;YACAG,OAAA,EAAAA;UACA;YACAP,OAAA;cACA,2BAAAL,KAAA;YACA;UACA;UACA,KAAAD,UAAA;QACA,SAAAO,KAAA;UACAC,OAAA,CAAAD,KAAA,8BAAAA,KAAA;QACA;MACA;IACA;IACA,MAAAQ,SAAAL,MAAA;MACA,MAAAM,UAAA,GAAAF,MAAA;MACA,IAAAE,UAAA;QACA;UACA,MAAAf,KAAA,GAAAC,YAAA,CAAAC,OAAA;UACA,MAAAP,KAAA,CAAAqB,GAAA,oCAAAP,MAAA;YACAQ,OAAA,EAAAF;UACA;YACAV,OAAA;cACA,2BAAAL,KAAA;YACA;UACA;UACA,KAAAD,UAAA;QACA,SAAAO,KAAA;UACAC,OAAA,CAAAD,KAAA,wBAAAA,KAAA;QACA;MACA;IACA;IACA,MAAAY,WAAAT,MAAA;MACA,IAAAU,OAAA;QACA;UACA,MAAAnB,KAAA,GAAAC,YAAA,CAAAC,OAAA;UACA,MAAAP,KAAA,CAAAyB,MAAA,oCAAAX,MAAA;YACAJ,OAAA;cACA,2BAAAL,KAAA;YACA;UACA;UACA,KAAAD,UAAA;QACA,SAAAO,KAAA;UACAC,OAAA,CAAAD,KAAA,yBAAAA,KAAA;QACA;MACA;IACA;EACA;EACAe,QAAA;IACA,KAAAtB,UAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}