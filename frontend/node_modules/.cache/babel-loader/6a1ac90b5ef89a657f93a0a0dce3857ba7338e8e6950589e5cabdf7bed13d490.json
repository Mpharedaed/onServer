{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      imageFile: null,\n      message: '',\n      isError: false\n    };\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.imageFile = event.target.files[0];\n      console.log(`Image file selected: ${this.imageFile.name}`);\n    },\n    async submitPost() {\n      console.log('Submitting post...');\n      try {\n        const token = localStorage.getItem('token');\n        console.log(`Token: ${token}`);\n        let imageUrl = '';\n        if (this.imageFile) {\n          console.log('Uploading image...');\n          const formData = new FormData();\n          formData.append('file', this.imageFile);\n          const uploadResponse = await axios.post('http://localhost:5000/api/upload', formData, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          console.log('Image uploaded:', uploadResponse.data);\n          imageUrl = uploadResponse.data.imageUrl;\n        }\n        console.log('Creating post...');\n        const response = await axios.post('http://localhost:5000/api/posts', {\n          // Add other post data fields here\n          image_url: imageUrl\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        console.log('Post created:', response.data);\n        if (response && response.data) {\n          this.message = 'Post created successfully!';\n          this.isError = false;\n          this.clearForm();\n        } else {\n          throw new Error('No data in response');\n        }\n      } catch (error) {\n        console.error('Error creating post:', error.response?.data || error.message);\n        this.message = error.response?.data?.error || 'An error occurred while creating the post.';\n        this.isError = true;\n      }\n    },\n    clearForm() {\n      console.log('Clearing form...');\n      this.imageFile = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","imageFile","message","isError","methods","handleImageUpload","event","target","files","console","log","name","submitPost","token","localStorage","getItem","imageUrl","formData","FormData","append","uploadResponse","post","headers","response","image_url","clearForm","Error","error"],"sources":["src/components/CreatePost.vue"],"sourcesContent":["<template>\r\n  <div class=\"create-post-container\">\r\n    <h2>Create a New Post</h2>\r\n    <form @submit.prevent=\"submitPost\">\r\n      <div>\r\n        <label for=\"image\">Upload Image:</label>\r\n        <input type=\"file\" @change=\"handleImageUpload\" />\r\n      </div>\r\n      <button type=\"submit\">Create Post</button>\r\n    </form>\r\n    <div v-if=\"message\" :class=\"{'error-message': isError, 'success-message': !isError}\">\r\n      {{ message }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      imageFile: null,\r\n      message: '',\r\n      isError: false,\r\n    };\r\n  },\r\n  methods: {\r\n    handleImageUpload(event) {\r\n      this.imageFile = event.target.files[0];\r\n      console.log(`Image file selected: ${this.imageFile.name}`);\r\n    },\r\n    async submitPost() {\r\n      console.log('Submitting post...');\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        console.log(`Token: ${token}`);\r\n        let imageUrl = '';\r\n\r\n        if (this.imageFile) {\r\n          console.log('Uploading image...');\r\n          const formData = new FormData();\r\n          formData.append('file', this.imageFile);\r\n          const uploadResponse = await axios.post('http://localhost:5000/api/upload', formData, {\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`,\r\n              'Content-Type': 'multipart/form-data'\r\n            }\r\n          });\r\n          console.log('Image uploaded:', uploadResponse.data);\r\n          imageUrl = uploadResponse.data.imageUrl;\r\n        }\r\n\r\n        console.log('Creating post...');\r\n        const response = await axios.post('http://localhost:5000/api/posts', {\r\n          // Add other post data fields here\r\n          image_url: imageUrl\r\n        }, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n\r\n        console.log('Post created:', response.data);\r\n        if (response && response.data) {\r\n          this.message = 'Post created successfully!';\r\n          this.isError = false;\r\n          this.clearForm();\r\n        } else {\r\n          throw new Error('No data in response');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error creating post:', error.response?.data || error.message);\r\n        this.message = error.response?.data?.error || 'An error occurred while creating the post.';\r\n        this.isError = true;\r\n      }\r\n    },\r\n    clearForm() {\r\n      console.log('Clearing form...');\r\n      this.imageFile = null;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.create-post-container {\r\n  max-width: 600px;\r\n  margin: auto;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n}\r\n\r\n.success-message {\r\n  color: green;\r\n}\r\n</style>\r\n"],"mappings":"AAiBA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,kBAAAC,KAAA;MACA,KAAAL,SAAA,GAAAK,KAAA,CAAAC,MAAA,CAAAC,KAAA;MACAC,OAAA,CAAAC,GAAA,8BAAAT,SAAA,CAAAU,IAAA;IACA;IACA,MAAAC,WAAA;MACAH,OAAA,CAAAC,GAAA;MACA;QACA,MAAAG,KAAA,GAAAC,YAAA,CAAAC,OAAA;QACAN,OAAA,CAAAC,GAAA,WAAAG,KAAA;QACA,IAAAG,QAAA;QAEA,SAAAf,SAAA;UACAQ,OAAA,CAAAC,GAAA;UACA,MAAAO,QAAA,OAAAC,QAAA;UACAD,QAAA,CAAAE,MAAA,cAAAlB,SAAA;UACA,MAAAmB,cAAA,SAAArB,KAAA,CAAAsB,IAAA,qCAAAJ,QAAA;YACAK,OAAA;cACA,2BAAAT,KAAA;cACA;YACA;UACA;UACAJ,OAAA,CAAAC,GAAA,oBAAAU,cAAA,CAAApB,IAAA;UACAgB,QAAA,GAAAI,cAAA,CAAApB,IAAA,CAAAgB,QAAA;QACA;QAEAP,OAAA,CAAAC,GAAA;QACA,MAAAa,QAAA,SAAAxB,KAAA,CAAAsB,IAAA;UACA;UACAG,SAAA,EAAAR;QACA;UACAM,OAAA;YACA,2BAAAT,KAAA;UACA;QACA;QAEAJ,OAAA,CAAAC,GAAA,kBAAAa,QAAA,CAAAvB,IAAA;QACA,IAAAuB,QAAA,IAAAA,QAAA,CAAAvB,IAAA;UACA,KAAAE,OAAA;UACA,KAAAC,OAAA;UACA,KAAAsB,SAAA;QACA;UACA,UAAAC,KAAA;QACA;MACA,SAAAC,KAAA;QACAlB,OAAA,CAAAkB,KAAA,yBAAAA,KAAA,CAAAJ,QAAA,EAAAvB,IAAA,IAAA2B,KAAA,CAAAzB,OAAA;QACA,KAAAA,OAAA,GAAAyB,KAAA,CAAAJ,QAAA,EAAAvB,IAAA,EAAA2B,KAAA;QACA,KAAAxB,OAAA;MACA;IACA;IACAsB,UAAA;MACAhB,OAAA,CAAAC,GAAA;MACA,KAAAT,SAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}