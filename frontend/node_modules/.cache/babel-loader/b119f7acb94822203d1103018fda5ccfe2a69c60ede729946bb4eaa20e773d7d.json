{"ast":null,"code":"import Vue from 'vue';\nimport Router from 'vue-router';\nimport HomePage from '@/views/HomePage.vue';\nimport AboutPage from '@/views/AboutPage.vue';\nimport UserDashboard from '@/views/UserDashboard.vue';\nimport LoginForm from '@/components/LoginForm.vue';\nimport SignupForm from '@/components/SignupForm.vue';\nVue.use(Router);\nconst router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '/',\n    name: 'Home',\n    component: HomePage\n  }, {\n    path: '/about',\n    name: 'About',\n    component: AboutPage\n  }, {\n    path: '/dashboard',\n    name: 'UserDashboard',\n    component: UserDashboard,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/login',\n    name: 'Login',\n    component: LoginForm\n  }, {\n    path: '/signup',\n    name: 'Signup',\n    component: SignupForm\n  }]\n});\n\n// Add navigation guard\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    // Check if user is authenticated\n    const isAuthenticated = !!localStorage.getItem('token'); // Adjust based on your authentication logic\n    if (!isAuthenticated) {\n      next({\n        path: '/login',\n        query: {\n          redirect: to.fullPath\n        } // Save the route user was trying to access\n      });\n    } else {\n      next();\n    }\n  } else {\n    next(); // Make sure to always call next()!\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","Router","HomePage","AboutPage","UserDashboard","LoginForm","SignupForm","use","router","mode","base","process","env","BASE_URL","routes","path","name","component","meta","requiresAuth","beforeEach","to","from","next","matched","some","record","isAuthenticated","localStorage","getItem","query","redirect","fullPath"],"sources":["C:/Users/moham/Downloads/bicobico/frontend/src/router/index.js"],"sourcesContent":["import Vue from 'vue';\r\nimport Router from 'vue-router';\r\nimport HomePage from '@/views/HomePage.vue';\r\nimport AboutPage from '@/views/AboutPage.vue';\r\nimport UserDashboard from '@/views/UserDashboard.vue';\r\nimport LoginForm from '@/components/LoginForm.vue';\r\nimport SignupForm from '@/components/SignupForm.vue';\r\n\r\nVue.use(Router);\r\n\r\nconst router = new Router({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'Home',\r\n      component: HomePage\r\n    },\r\n    {\r\n      path: '/about',\r\n      name: 'About',\r\n      component: AboutPage\r\n    },\r\n    {\r\n      path: '/dashboard',\r\n      name: 'UserDashboard',\r\n      component: UserDashboard,\r\n      meta: { requiresAuth: true }\r\n    },\r\n    {\r\n      path: '/login',\r\n      name: 'Login',\r\n      component: LoginForm\r\n    },\r\n    {\r\n      path: '/signup',\r\n      name: 'Signup',\r\n      component: SignupForm\r\n    }\r\n  ]\r\n});\r\n\r\n// Add navigation guard\r\nrouter.beforeEach((to, from, next) => {\r\n  if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    // Check if user is authenticated\r\n    const isAuthenticated = !!localStorage.getItem('token'); // Adjust based on your authentication logic\r\n    if (!isAuthenticated) {\r\n      next({\r\n        path: '/login',\r\n        query: { redirect: to.fullPath } // Save the route user was trying to access\r\n      });\r\n    } else {\r\n      next();\r\n    }\r\n  } else {\r\n    next(); // Make sure to always call next()!\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,MAAM,MAAM,YAAY;AAC/B,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,aAAa,MAAM,2BAA2B;AACrD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,UAAU,MAAM,6BAA6B;AAEpDN,GAAG,CAACO,GAAG,CAACN,MAAM,CAAC;AAEf,MAAMO,MAAM,GAAG,IAAIP,MAAM,CAAC;EACxBQ,IAAI,EAAE,SAAS;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAC1BC,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,GAAG;IACTC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAEf;EACb,CAAC,EACD;IACEa,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,OAAO;IACbC,SAAS,EAAEd;EACb,CAAC,EACD;IACEY,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE,eAAe;IACrBC,SAAS,EAAEb,aAAa;IACxBc,IAAI,EAAE;MAAEC,YAAY,EAAE;IAAK;EAC7B,CAAC,EACD;IACEJ,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,OAAO;IACbC,SAAS,EAAEZ;EACb,CAAC,EACD;IACEU,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE,QAAQ;IACdC,SAAS,EAAEX;EACb,CAAC;AAEL,CAAC,CAAC;;AAEF;AACAE,MAAM,CAACY,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACR,IAAI,CAACC,YAAY,CAAC,EAAE;IACvD;IACA,MAAMQ,eAAe,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IACzD,IAAI,CAACF,eAAe,EAAE;MACpBJ,IAAI,CAAC;QACHR,IAAI,EAAE,QAAQ;QACde,KAAK,EAAE;UAAEC,QAAQ,EAAEV,EAAE,CAACW;QAAS,CAAC,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC,MAAM;MACLT,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC,CAAC,CAAC;EACV;AACF,CAAC,CAAC;AAEF,eAAef,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}