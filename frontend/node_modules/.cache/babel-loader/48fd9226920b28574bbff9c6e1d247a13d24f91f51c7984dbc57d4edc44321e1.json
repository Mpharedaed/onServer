{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      postData: {\n        content: '',\n        tags: '',\n        image_url: '',\n        is_pinned: false,\n        is_anonymous: false // New property for anonymous post\n      },\n      message: ''\n    };\n  },\n  methods: {\n    async createPost() {\n      this.message = '';\n      try {\n        const token = localStorage.getItem('token'); // Assume JWT token is stored in localStorage\n        const payload = {\n          content: this.postData.content,\n          tags: this.postData.tags.split(',').map(tag => tag.trim()),\n          // Convert tags to an array\n          image_url: this.postData.image_url,\n          is_pinned: this.postData.is_pinned,\n          is_anonymous: this.postData.is_anonymous // Include anonymous option in payload\n        };\n        console.log('Payload:', JSON.stringify(payload, null, 2)); // Log the payload\n        const response = await axios.post('http://127.0.0.1:5000/api/posts', payload, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('Response:', response); // Log the response\n        this.message = 'Post created successfully!';\n        // Clear the form\n        this.postData = {\n          content: '',\n          tags: '',\n          image_url: '',\n          is_pinned: false,\n          is_anonymous: false\n        };\n      } catch (error) {\n        console.error('Error:', error); // Log the error\n        if (error.response) {\n          this.message = error.response.data.error;\n        } else {\n          this.message = 'An error occurred. Please try again.';\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","postData","content","tags","image_url","is_pinned","is_anonymous","message","methods","createPost","token","localStorage","getItem","payload","split","map","tag","trim","console","log","JSON","stringify","response","post","headers","Authorization","error"],"sources":["src/components/CreatePost.vue"],"sourcesContent":["<template>\r\n  <div class=\"create-post\">\r\n    <h2>Create a New Post</h2>\r\n    <form @submit.prevent=\"createPost\">\r\n      <div class=\"form-group\">\r\n        <label for=\"content\">Content</label>\r\n        <textarea id=\"content\" v-model=\"postData.content\" required placeholder=\"Enter your post content...\"></textarea>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"tags\">Tags (comma separated)</label>\r\n        <input type=\"text\" id=\"tags\" v-model=\"postData.tags\" placeholder=\"e.g., tech, news, design\"/>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"image_url\">Image URL</label>\r\n        <input type=\"url\" id=\"image_url\" v-model=\"postData.image_url\" placeholder=\"https://example.com/image.jpg\"/>\r\n      </div>\r\n      <div class=\"form-group checkbox-group\">\r\n        <label for=\"is_pinned\">\r\n          <input type=\"checkbox\" id=\"is_pinned\" v-model=\"postData.is_pinned\"/>\r\n          Pin this post\r\n        </label>\r\n      </div>\r\n      <div class=\"form-group toggle-group\">\r\n        <label for=\"is_anonymous\">Post Anonymously</label>\r\n        <label class=\"switch\">\r\n          <input type=\"checkbox\" id=\"is_anonymous\" v-model=\"postData.is_anonymous\"/>\r\n          <span class=\"slider round\"></span>\r\n        </label>\r\n      </div>\r\n      <button type=\"submit\">Create Post</button>\r\n    </form>\r\n    <div v-if=\"message\" class=\"message\">{{ message }}</div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      postData: {\r\n        content: '',\r\n        tags: '',\r\n        image_url: '',\r\n        is_pinned: false,\r\n        is_anonymous: false, // New property for anonymous post\r\n      },\r\n      message: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async createPost() {\r\n      this.message = '';\r\n      try {\r\n        const token = localStorage.getItem('token'); // Assume JWT token is stored in localStorage\r\n        const payload = {\r\n          content: this.postData.content,\r\n          tags: this.postData.tags.split(',').map(tag => tag.trim()), // Convert tags to an array\r\n          image_url: this.postData.image_url,\r\n          is_pinned: this.postData.is_pinned,\r\n          is_anonymous: this.postData.is_anonymous // Include anonymous option in payload\r\n        };\r\n        console.log('Payload:', JSON.stringify(payload, null, 2)); // Log the payload\r\n        const response = await axios.post('http://127.0.0.1:5000/api/posts', payload, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          },\r\n        });\r\n        console.log('Response:', response); // Log the response\r\n        this.message = 'Post created successfully!';\r\n        // Clear the form\r\n        this.postData = {\r\n          content: '',\r\n          tags: '',\r\n          image_url: '',\r\n          is_pinned: false,\r\n          is_anonymous: false,\r\n        };\r\n      } catch (error) {\r\n        console.error('Error:', error); // Log the error\r\n        if (error.response) {\r\n          this.message = error.response.data.error;\r\n        } else {\r\n          this.message = 'An error occurred. Please try again.';\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');\r\n\r\n.create-post {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 30px;\r\n  background: #ffffff;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n  font-family: 'Roboto', sans-serif;\r\n}\r\n\r\nh2 {\r\n  margin-bottom: 20px;\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  color: #333333;\r\n  text-align: center;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: 500;\r\n  color: #555555;\r\n}\r\n\r\n.form-group input,\r\n.form-group textarea {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #cccccc;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n  font-size: 16px;\r\n  transition: border-color 0.3s, box-shadow 0.3s;\r\n}\r\n\r\n.form-group input:focus,\r\n.form-group textarea:focus {\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 8px rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n.form-group textarea {\r\n  height: 120px;\r\n  resize: vertical;\r\n}\r\n\r\n.checkbox-group {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.checkbox-group label {\r\n  margin: 0;\r\n  font-weight: normal;\r\n  color: #555555;\r\n}\r\n\r\n.checkbox-group input {\r\n  margin-right: 10px;\r\n}\r\n\r\nbutton {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 14px;\r\n  background: linear-gradient(90deg, #007bff, #0056b3);\r\n  color: #ffffff;\r\n  border: none;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  transition: background-color 0.3s, transform 0.2s;\r\n  text-align: center;\r\n}\r\n\r\nbutton:hover {\r\n  background: linear-gradient(90deg, #0056b3, #007bff);\r\n  transform: translateY(-2px);\r\n}\r\n\r\nbutton:active {\r\n  transform: translateY(0);\r\n}\r\n\r\n.message {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  background: #e6ffe6;\r\n  color: #2d862d;\r\n  border: 1px solid #b3ffb3;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n}\r\n\r\n/* Responsive Design */\r\n@media (max-width: 600px) {\r\n  .create-post {\r\n    padding: 20px;\r\n  }\r\n\r\n  button {\r\n    padding: 12px;\r\n    font-size: 14px;\r\n  }\r\n}\r\n\r\n/* Accessibility Enhancements */\r\n.create-post {\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.form-group input,\r\n.form-group textarea {\r\n  font-size: 16px;\r\n}\r\n\r\nbutton {\r\n  font-size: 16px;\r\n}\r\n\r\nh2 {\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.form-group label {\r\n  font-size: 1rem;\r\n}\r\n\r\n\r\n.create-post {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background: #f0f2f5;\r\n  border-radius: 10px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.checkbox-group {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.toggle-group {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.switch {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 60px;\r\n  height: 34px;\r\n}\r\n\r\n.switch input {\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n.slider {\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: #ccc;\r\n  transition: 0.4s;\r\n  border-radius: 34px;\r\n}\r\n\r\n.slider:before {\r\n  position: absolute;\r\n  content: \"\";\r\n  height: 26px;\r\n  width: 26px;\r\n  left: 4px;\r\n  bottom: 4px;\r\n  background-color: white;\r\n  transition: 0.4s;\r\n  border-radius: 50%;\r\n}\r\n\r\ninput:checked + .slider {\r\n  background-color: #2196F3;\r\n}\r\n\r\ninput:focus + .slider {\r\n  box-shadow: 0 0 1px #2196F3;\r\n}\r\n\r\ninput:checked + .slider:before {\r\n  transform: translateX(26px);\r\n}\r\n</style>\r\n"],"mappings":"AAqCA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,OAAA;QACAC,IAAA;QACAC,SAAA;QACAC,SAAA;QACAC,YAAA;MACA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAA;MACA,KAAAF,OAAA;MACA;QACA,MAAAG,KAAA,GAAAC,YAAA,CAAAC,OAAA;QACA,MAAAC,OAAA;UACAX,OAAA,OAAAD,QAAA,CAAAC,OAAA;UACAC,IAAA,OAAAF,QAAA,CAAAE,IAAA,CAAAW,KAAA,MAAAC,GAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAC,IAAA;UAAA;UACAb,SAAA,OAAAH,QAAA,CAAAG,SAAA;UACAC,SAAA,OAAAJ,QAAA,CAAAI,SAAA;UACAC,YAAA,OAAAL,QAAA,CAAAK,YAAA;QACA;QACAY,OAAA,CAAAC,GAAA,aAAAC,IAAA,CAAAC,SAAA,CAAAR,OAAA;QACA,MAAAS,QAAA,SAAAvB,KAAA,CAAAwB,IAAA,oCAAAV,OAAA;UACAW,OAAA;YACAC,aAAA,YAAAf,KAAA;YACA;UACA;QACA;QACAQ,OAAA,CAAAC,GAAA,cAAAG,QAAA;QACA,KAAAf,OAAA;QACA;QACA,KAAAN,QAAA;UACAC,OAAA;UACAC,IAAA;UACAC,SAAA;UACAC,SAAA;UACAC,YAAA;QACA;MACA,SAAAoB,KAAA;QACAR,OAAA,CAAAQ,KAAA,WAAAA,KAAA;QACA,IAAAA,KAAA,CAAAJ,QAAA;UACA,KAAAf,OAAA,GAAAmB,KAAA,CAAAJ,QAAA,CAAAtB,IAAA,CAAA0B,KAAA;QACA;UACA,KAAAnB,OAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}