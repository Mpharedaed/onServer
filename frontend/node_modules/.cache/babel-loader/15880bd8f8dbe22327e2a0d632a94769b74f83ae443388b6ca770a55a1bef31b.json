{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'PotentialFriends',\n  data() {\n    return {\n      potentialFriends: [],\n      error: null,\n      loading: true\n    };\n  },\n  created() {\n    this.fetchPotentialFriends();\n  },\n  methods: {\n    async fetchPotentialFriends() {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://127.0.0.1:5000/api/potential_friends', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.potentialFriends = response.data.potential_friends;\n      } catch (error) {\n        console.error('Error fetching potential friends:', error);\n        this.error = 'Failed to fetch potential friends.';\n      } finally {\n        this.loading = false;\n      }\n    },\n    async sendFriendRequest(userId) {\n      try {\n        const token = localStorage.getItem('token');\n        await axios.post(`http://127.0.0.1:5000/api/add`, {\n          user2_id: userId\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert('Friend request sent successfully!');\n        this.potentialFriends = this.potentialFriends.filter(user => user.id !== userId);\n      } catch (error) {\n        console.error('Error sending friend request:', error);\n        alert('Failed to send friend request.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","potentialFriends","error","loading","created","fetchPotentialFriends","methods","token","localStorage","getItem","response","get","headers","Authorization","potential_friends","console","sendFriendRequest","userId","post","user2_id","alert","filter","user","id"],"sources":["src/components/PotentialFriends.vue"],"sourcesContent":["<template>\n    <div class=\"potential-friends-container\">\n      <h2 class=\"section-title\">Find New Friends</h2>\n      <ul class=\"potential-friends-list\">\n        <li v-for=\"user in potentialFriends\" :key=\"user.id\" class=\"potential-friend-item\">\n          <img :src=\"user.avatar || 'default-avatar.png'\" alt=\"User Avatar\" class=\"avatar-small\">\n          <div class=\"user-info\">\n            <h3 class=\"username\">{{ user.name }}</h3>\n            <button @click=\"sendFriendRequest(user.id)\" class=\"add-friend-button\">Add Friend</button>\n          </div>\n        </li>\n      </ul>\n      <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\n      <div v-if=\"loading\" class=\"loading-message\">Loading...</div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    name: 'PotentialFriends',\n    data() {\n      return {\n        potentialFriends: [],\n        error: null,\n        loading: true,\n      };\n    },\n    created() {\n      this.fetchPotentialFriends();\n    },\n    methods: {\n      async fetchPotentialFriends() {\n        try {\n          const token = localStorage.getItem('token');\n          const response = await axios.get('http://127.0.0.1:5000/api/potential_friends', {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          });\n          this.potentialFriends = response.data.potential_friends;\n        } catch (error) {\n          console.error('Error fetching potential friends:', error);\n          this.error = 'Failed to fetch potential friends.';\n        } finally {\n          this.loading = false;\n        }\n      },\n      async sendFriendRequest(userId) {\n        try {\n          const token = localStorage.getItem('token');\n          await axios.post(`http://127.0.0.1:5000/api/add`, { user2_id: userId }, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          });\n          alert('Friend request sent successfully!');\n          this.potentialFriends = this.potentialFriends.filter(user => user.id !== userId);\n        } catch (error) {\n          console.error('Error sending friend request:', error);\n          alert('Failed to send friend request.');\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .potential-friends-container {\n    max-width: 800px;\n    margin: 0 auto;\n    padding: 20px;\n    background: #f0f2f5;\n    border-radius: 10px;\n  }\n  \n  .section-title {\n    font-size: 22px;\n    margin-bottom: 10px;\n    text-align: center;\n  }\n  \n  .potential-friends-list {\n    list-style-type: none;\n    padding: 0;\n  }\n  \n  .potential-friend-item {\n    background: #fff;\n    padding: 15px;\n    margin-bottom: 10px;\n    border-radius: 8px;\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n    display: flex;\n    align-items: center;\n  }\n  \n  .avatar-small {\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    margin-right: 10px;\n  }\n  \n  .user-info {\n    flex-grow: 1;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  \n  .username {\n    font-size: 16px;\n    color: #333;\n  }\n  \n  .add-friend-button {\n    padding: 10px 20px;\n    border: none;\n    background: #007bff;\n    color: #fff;\n    cursor: pointer;\n    border-radius: 20px;\n    font-size: 14px;\n  }\n  \n  .add-friend-button:hover {\n    background: #0056b3;\n  }\n  \n  .error-message {\n    color: red;\n    text-align: center;\n  }\n  \n  .loading-message {\n    text-align: center;\n  }\n  </style>\n  "],"mappings":"AAkBA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,gBAAA;MACAC,KAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,qBAAA;EACA;EACAC,OAAA;IACA,MAAAD,sBAAA;MACA;QACA,MAAAE,KAAA,GAAAC,YAAA,CAAAC,OAAA;QACA,MAAAC,QAAA,SAAAZ,KAAA,CAAAa,GAAA;UACAC,OAAA;YACAC,aAAA,YAAAN,KAAA;UACA;QACA;QACA,KAAAN,gBAAA,GAAAS,QAAA,CAAAV,IAAA,CAAAc,iBAAA;MACA,SAAAZ,KAAA;QACAa,OAAA,CAAAb,KAAA,sCAAAA,KAAA;QACA,KAAAA,KAAA;MACA;QACA,KAAAC,OAAA;MACA;IACA;IACA,MAAAa,kBAAAC,MAAA;MACA;QACA,MAAAV,KAAA,GAAAC,YAAA,CAAAC,OAAA;QACA,MAAAX,KAAA,CAAAoB,IAAA;UAAAC,QAAA,EAAAF;QAAA;UACAL,OAAA;YACAC,aAAA,YAAAN,KAAA;UACA;QACA;QACAa,KAAA;QACA,KAAAnB,gBAAA,QAAAA,gBAAA,CAAAoB,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,EAAA,KAAAN,MAAA;MACA,SAAAf,KAAA;QACAa,OAAA,CAAAb,KAAA,kCAAAA,KAAA;QACAkB,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}