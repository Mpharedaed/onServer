{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    token: null,\n    user: null\n  },\n  mutations: {\n    SET_TOKEN(state, token) {\n      state.token = token;\n    },\n    SET_USER(state, user) {\n      state.user = user;\n    },\n    CLEAR_AUTH(state) {\n      state.token = null;\n      state.user = null;\n    }\n  },\n  actions: {\n    async login({\n      commit\n    }, credentials) {\n      try {\n        const response = await axios.post('http://127.0.0.1:5000/api/login', credentials);\n        const token = response.data.token;\n        localStorage.setItem('token', token);\n        commit('SET_TOKEN', token);\n        // Optionally fetch user data here\n        commit('SET_USER', {\n          username: credentials.username\n        });\n        return response;\n      } catch (error) {\n        console.error('Login failed:', error);\n        throw error;\n      }\n    },\n    logout({\n      commit\n    }) {\n      localStorage.removeItem('token');\n      commit('CLEAR_AUTH');\n    },\n    checkAuthentication({\n      commit\n    }) {\n      const token = localStorage.getItem('token');\n      if (token) {\n        commit('SET_TOKEN', token);\n        // Optionally, you can add code here to fetch the user data using the token\n      } else {\n        commit('CLEAR_AUTH');\n      }\n    }\n  },\n  getters: {\n    isAuthenticated: state => !!state.token,\n    getUser: state => state.user\n  }\n});","map":{"version":3,"names":["Vue","Vuex","axios","use","Store","state","token","user","mutations","SET_TOKEN","SET_USER","CLEAR_AUTH","actions","login","commit","credentials","response","post","data","localStorage","setItem","username","error","console","logout","removeItem","checkAuthentication","getItem","getters","isAuthenticated","getUser"],"sources":["C:/Users/moham/Downloads/bicobico/frontend/src/store.js"],"sourcesContent":["import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nimport axios from 'axios';\r\n\r\nVue.use(Vuex);\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    token: null,\r\n    user: null\r\n  },\r\n  mutations: {\r\n    SET_TOKEN(state, token) {\r\n      state.token = token;\r\n    },\r\n    SET_USER(state, user) {\r\n      state.user = user;\r\n    },\r\n    CLEAR_AUTH(state) {\r\n      state.token = null;\r\n      state.user = null;\r\n    }\r\n  },\r\n  actions: {\r\n    async login({ commit }, credentials) {\r\n      try {\r\n        const response = await axios.post('http://127.0.0.1:5000/api/login', credentials);\r\n        const token = response.data.token;\r\n        localStorage.setItem('token', token);\r\n        commit('SET_TOKEN', token);\r\n        // Optionally fetch user data here\r\n        commit('SET_USER', { username: credentials.username });\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Login failed:', error);\r\n        throw error;\r\n      }\r\n    },\r\n    logout({ commit }) {\r\n      localStorage.removeItem('token');\r\n      commit('CLEAR_AUTH');\r\n    },\r\n    checkAuthentication({ commit }) {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        commit('SET_TOKEN', token);\r\n        // Optionally, you can add code here to fetch the user data using the token\r\n      } else {\r\n        commit('CLEAR_AUTH');\r\n      }\r\n    }\r\n  },\r\n  getters: {\r\n    isAuthenticated: state => !!state.token,\r\n    getUser: state => state.user\r\n  }\r\n});\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AAEzBF,GAAG,CAACG,GAAG,CAACF,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACG,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACLC,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE;EACR,CAAC;EACDC,SAAS,EAAE;IACTC,SAASA,CAACJ,KAAK,EAAEC,KAAK,EAAE;MACtBD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDI,QAAQA,CAACL,KAAK,EAAEE,IAAI,EAAE;MACpBF,KAAK,CAACE,IAAI,GAAGA,IAAI;IACnB,CAAC;IACDI,UAAUA,CAACN,KAAK,EAAE;MAChBA,KAAK,CAACC,KAAK,GAAG,IAAI;MAClBD,KAAK,CAACE,IAAI,GAAG,IAAI;IACnB;EACF,CAAC;EACDK,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAC;MAAEC;IAAO,CAAC,EAAEC,WAAW,EAAE;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,iCAAiC,EAAEF,WAAW,CAAC;QACjF,MAAMT,KAAK,GAAGU,QAAQ,CAACE,IAAI,CAACZ,KAAK;QACjCa,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEd,KAAK,CAAC;QACpCQ,MAAM,CAAC,WAAW,EAAER,KAAK,CAAC;QAC1B;QACAQ,MAAM,CAAC,UAAU,EAAE;UAAEO,QAAQ,EAAEN,WAAW,CAACM;QAAS,CAAC,CAAC;QACtD,OAAOL,QAAQ;MACjB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;QACrC,MAAMA,KAAK;MACb;IACF,CAAC;IACDE,MAAMA,CAAC;MAAEV;IAAO,CAAC,EAAE;MACjBK,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;MAChCX,MAAM,CAAC,YAAY,CAAC;IACtB,CAAC;IACDY,mBAAmBA,CAAC;MAAEZ;IAAO,CAAC,EAAE;MAC9B,MAAMR,KAAK,GAAGa,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIrB,KAAK,EAAE;QACTQ,MAAM,CAAC,WAAW,EAAER,KAAK,CAAC;QAC1B;MACF,CAAC,MAAM;QACLQ,MAAM,CAAC,YAAY,CAAC;MACtB;IACF;EACF,CAAC;EACDc,OAAO,EAAE;IACPC,eAAe,EAAExB,KAAK,IAAI,CAAC,CAACA,KAAK,CAACC,KAAK;IACvCwB,OAAO,EAAEzB,KAAK,IAAIA,KAAK,CAACE;EAC1B;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}