{"ast":null,"code":"import axios from 'axios';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      posts: [],\n      error: null\n    };\n  },\n  computed: {\n    ...mapGetters(['isAuthenticated', 'authToken', 'user'])\n  },\n  methods: {\n    async fetchUserPosts() {\n      console.log('Fetching user posts...');\n      if (!this.authToken) {\n        this.error = 'No authentication token found.';\n        console.error('No authentication token found.');\n        return;\n      }\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/user/posts', {\n          headers: {\n            Authorization: `Bearer ${this.authToken}`\n          }\n        });\n        console.log('API response:', response); // Log the full response\n        if (response.data && response.data.posts) {\n          this.posts = response.data.posts;\n          console.log('Fetched posts:', this.posts);\n        } else {\n          console.error('No posts data in response:', response);\n          this.error = 'No posts data found in the response.';\n        }\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n        if (error.response) {\n          console.error('Error response data:', error.response.data);\n          this.error = `Failed to fetch posts. ${error.response.data.error}`;\n        } else {\n          this.error = 'Failed to fetch posts. Please try again later.';\n        }\n      }\n    }\n  },\n  created() {\n    console.log('UserProfile component created.');\n    console.log('User data in store:', this.user);\n    if (this.isAuthenticated) {\n      if (this.user) {\n        console.log('User data:', this.user);\n        this.fetchUserPosts();\n      } else {\n        this.error = 'User data not found.';\n        console.error('User data not found.');\n      }\n    } else {\n      this.error = 'You need to be logged in to view this page.';\n      console.error('User is not authenticated.');\n    }\n  }\n};","map":{"version":3,"names":["axios","mapGetters","name","data","posts","error","computed","methods","fetchUserPosts","console","log","authToken","response","get","headers","Authorization","created","user","isAuthenticated"],"sources":["src/components/UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-profile\">\r\n    <h2 v-if=\"user\">{{ user.username }}'s Profile</h2>\r\n    <div v-if=\"error\">\r\n      <p class=\"error\">{{ error }}</p>\r\n    </div>\r\n    <div v-else-if=\"posts.length\">\r\n      <h3>Your Posts</h3>\r\n      <ul>\r\n        <li v-for=\"post in posts\" :key=\"post.id\">\r\n          <h4>{{ post.content }}</h4>\r\n          <p>{{ post.created_at }}</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div v-else>\r\n      <p>You have no posts.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  name: 'UserProfile',\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      error: null,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['isAuthenticated', 'authToken', 'user']),\r\n  },\r\n  methods: {\r\n    async fetchUserPosts() {\r\n      console.log('Fetching user posts...');\r\n      if (!this.authToken) {\r\n        this.error = 'No authentication token found.';\r\n        console.error('No authentication token found.');\r\n        return;\r\n      }\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:5000/api/user/posts', {\r\n          headers: {\r\n            Authorization: `Bearer ${this.authToken}`\r\n          }\r\n        });\r\n        console.log('API response:', response); // Log the full response\r\n        if (response.data && response.data.posts) {\r\n          this.posts = response.data.posts;\r\n          console.log('Fetched posts:', this.posts);\r\n        } else {\r\n          console.error('No posts data in response:', response);\r\n          this.error = 'No posts data found in the response.';\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching posts:', error);\r\n        if (error.response) {\r\n          console.error('Error response data:', error.response.data);\r\n          this.error = `Failed to fetch posts. ${error.response.data.error}`;\r\n        } else {\r\n          this.error = 'Failed to fetch posts. Please try again later.';\r\n        }\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    console.log('UserProfile component created.');\r\n    console.log('User data in store:', this.user);\r\n    if (this.isAuthenticated) {\r\n      if (this.user) {\r\n        console.log('User data:', this.user);\r\n        this.fetchUserPosts();\r\n      } else {\r\n        this.error = 'User data not found.';\r\n        console.error('User data not found.');\r\n      }\r\n    } else {\r\n      this.error = 'You need to be logged in to view this page.';\r\n      console.error('User is not authenticated.');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-profile {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n}\r\n</style>\r\n"],"mappings":"AAsBA,OAAAA,KAAA;AACA,SAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAL,UAAA;EACA;EACAM,OAAA;IACA,MAAAC,eAAA;MACAC,OAAA,CAAAC,GAAA;MACA,UAAAC,SAAA;QACA,KAAAN,KAAA;QACAI,OAAA,CAAAJ,KAAA;QACA;MACA;MACA;QACA,MAAAO,QAAA,SAAAZ,KAAA,CAAAa,GAAA;UACAC,OAAA;YACAC,aAAA,iBAAAJ,SAAA;UACA;QACA;QACAF,OAAA,CAAAC,GAAA,kBAAAE,QAAA;QACA,IAAAA,QAAA,CAAAT,IAAA,IAAAS,QAAA,CAAAT,IAAA,CAAAC,KAAA;UACA,KAAAA,KAAA,GAAAQ,QAAA,CAAAT,IAAA,CAAAC,KAAA;UACAK,OAAA,CAAAC,GAAA,wBAAAN,KAAA;QACA;UACAK,OAAA,CAAAJ,KAAA,+BAAAO,QAAA;UACA,KAAAP,KAAA;QACA;MACA,SAAAA,KAAA;QACAI,OAAA,CAAAJ,KAAA,0BAAAA,KAAA;QACA,IAAAA,KAAA,CAAAO,QAAA;UACAH,OAAA,CAAAJ,KAAA,yBAAAA,KAAA,CAAAO,QAAA,CAAAT,IAAA;UACA,KAAAE,KAAA,6BAAAA,KAAA,CAAAO,QAAA,CAAAT,IAAA,CAAAE,KAAA;QACA;UACA,KAAAA,KAAA;QACA;MACA;IACA;EACA;EACAW,QAAA;IACAP,OAAA,CAAAC,GAAA;IACAD,OAAA,CAAAC,GAAA,6BAAAO,IAAA;IACA,SAAAC,eAAA;MACA,SAAAD,IAAA;QACAR,OAAA,CAAAC,GAAA,oBAAAO,IAAA;QACA,KAAAT,cAAA;MACA;QACA,KAAAH,KAAA;QACAI,OAAA,CAAAJ,KAAA;MACA;IACA;MACA,KAAAA,KAAA;MACAI,OAAA,CAAAJ,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}