{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      title: '',\n      summary: '',\n      content: '',\n      tags: '',\n      category: '',\n      image_url: '',\n      imageFile: null,\n      message: '',\n      isError: false\n    };\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.imageFile = event.target.files[0];\n    },\n    async submitPost() {\n      try {\n        const token = localStorage.getItem('token'); // Ensure token is stored here\n        let imageUrl = this.image_url;\n        if (this.imageFile) {\n          const formData = new FormData();\n          formData.append('image', this.imageFile);\n          const uploadResponse = await axios.post('http://localhost:5000/api/upload', formData, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          imageUrl = uploadResponse.data.imageUrl;\n        }\n        const response = await axios.post('http://localhost:5000/api/posts', {\n          content: this.content,\n          tags: this.tags.split(','),\n          category: this.category,\n          image_url: imageUrl\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response && response.data) {\n          this.message = 'Post created successfully!';\n          this.isError = false;\n        } else {\n          throw new Error('No data in response');\n        }\n      } catch (error) {\n        this.message = error.response?.data?.error || 'An error occurred while creating the post.';\n        this.isError = true;\n        console.error('Error details:', error.response?.data);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","title","summary","content","tags","category","image_url","imageFile","message","isError","methods","handleImageUpload","event","target","files","submitPost","token","localStorage","getItem","imageUrl","formData","FormData","append","uploadResponse","post","headers","response","split","Error","error","console"],"sources":["src/components/CreatePost.vue"],"sourcesContent":["<template>\r\n  <div class=\"create-post-container\">\r\n    <h2>Create a New Post</h2>\r\n    <form @submit.prevent=\"submitPost\">\r\n      <div>\r\n        <label for=\"title\">Title:</label>\r\n        <input type=\"text\" v-model=\"title\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"summary\">Summary:</label>\r\n        <textarea v-model=\"summary\" placeholder=\"Optional summary of the post\"></textarea>\r\n      </div>\r\n      <div>\r\n        <label for=\"content\">Content:</label>\r\n        <textarea v-model=\"content\" required></textarea>\r\n      </div>\r\n      <div>\r\n        <label for=\"tags\">Tags:</label>\r\n        <input type=\"text\" v-model=\"tags\" placeholder=\"Comma-separated tags\" />\r\n      </div>\r\n      <div>\r\n        <label for=\"category\">Category:</label>\r\n        <select v-model=\"category\" required>\r\n          <option disabled value=\"\">Please select a category</option>\r\n          <option value=\"tech\">Tech</option>\r\n          <option value=\"health\">Health</option>\r\n          <option value=\"lifestyle\">Lifestyle</option>\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label for=\"image_url\">Image URL:</label>\r\n        <input type=\"text\" v-model=\"image_url\" />\r\n      </div>\r\n      <div>\r\n        <label for=\"image\">Upload Image:</label>\r\n        <input type=\"file\" @change=\"handleImageUpload\" />\r\n      </div>\r\n      <button type=\"submit\">Create Post</button>\r\n    </form>\r\n    <div v-if=\"message\" :class=\"{'error-message': isError, 'success-message': !isError}\">\r\n      {{ message }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      title: '',\r\n      summary: '',\r\n      content: '',\r\n      tags: '',\r\n      category: '',\r\n      image_url: '',\r\n      imageFile: null,\r\n      message: '',\r\n      isError: false,\r\n    };\r\n  },\r\n  methods: {\r\n    handleImageUpload(event) {\r\n      this.imageFile = event.target.files[0];\r\n    },\r\n    async submitPost() {\r\n      try {\r\n        const token = localStorage.getItem('token'); // Ensure token is stored here\r\n        let imageUrl = this.image_url;\r\n\r\n        if (this.imageFile) {\r\n          const formData = new FormData();\r\n          formData.append('image', this.imageFile);\r\n          const uploadResponse = await axios.post('http://localhost:5000/api/upload', formData, {\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`,\r\n              'Content-Type': 'multipart/form-data'\r\n            }\r\n          });\r\n          imageUrl = uploadResponse.data.imageUrl;\r\n        }\r\n\r\n        const response = await axios.post('http://localhost:5000/api/posts', {\r\n          content: this.content,\r\n          tags: this.tags.split(','),\r\n          category: this.category,\r\n          image_url: imageUrl\r\n        }, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n\r\n        if (response && response.data) {\r\n          this.message = 'Post created successfully!';\r\n          this.isError = false;\r\n        } else {\r\n          throw new Error('No data in response');\r\n        }\r\n      } catch (error) {\r\n        this.message = error.response?.data?.error || 'An error occurred while creating the post.';\r\n        this.isError = true;\r\n        console.error('Error details:', error.response?.data);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n  \r\n  <style scoped>\r\n  .create-post-container {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    padding: 1rem;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n  }\r\n  .error-message {\r\n    color: red;\r\n  }\r\n  .success-message {\r\n    color: green;\r\n  }\r\n  </style>\r\n  "],"mappings":"AA8CA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA;MACAC,OAAA;MACAC,IAAA;MACAC,QAAA;MACAC,SAAA;MACAC,SAAA;MACAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,kBAAAC,KAAA;MACA,KAAAL,SAAA,GAAAK,KAAA,CAAAC,MAAA,CAAAC,KAAA;IACA;IACA,MAAAC,WAAA;MACA;QACA,MAAAC,KAAA,GAAAC,YAAA,CAAAC,OAAA;QACA,IAAAC,QAAA,QAAAb,SAAA;QAEA,SAAAC,SAAA;UACA,MAAAa,QAAA,OAAAC,QAAA;UACAD,QAAA,CAAAE,MAAA,eAAAf,SAAA;UACA,MAAAgB,cAAA,SAAAxB,KAAA,CAAAyB,IAAA,qCAAAJ,QAAA;YACAK,OAAA;cACA,2BAAAT,KAAA;cACA;YACA;UACA;UACAG,QAAA,GAAAI,cAAA,CAAAvB,IAAA,CAAAmB,QAAA;QACA;QAEA,MAAAO,QAAA,SAAA3B,KAAA,CAAAyB,IAAA;UACArB,OAAA,OAAAA,OAAA;UACAC,IAAA,OAAAA,IAAA,CAAAuB,KAAA;UACAtB,QAAA,OAAAA,QAAA;UACAC,SAAA,EAAAa;QACA;UACAM,OAAA;YACA,2BAAAT,KAAA;UACA;QACA;QAEA,IAAAU,QAAA,IAAAA,QAAA,CAAA1B,IAAA;UACA,KAAAQ,OAAA;UACA,KAAAC,OAAA;QACA;UACA,UAAAmB,KAAA;QACA;MACA,SAAAC,KAAA;QACA,KAAArB,OAAA,GAAAqB,KAAA,CAAAH,QAAA,EAAA1B,IAAA,EAAA6B,KAAA;QACA,KAAApB,OAAA;QACAqB,OAAA,CAAAD,KAAA,mBAAAA,KAAA,CAAAH,QAAA,EAAA1B,IAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}