{"ast":null,"code":"// src/plugins/axios.js\nimport axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'https://blogi-36jo.onrender.com/api/auth',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    console.log('Token found and added to headers:', token); // Add this log to debug\n    config.headers.Authorization = `Bearer ${token}`;\n  } else {\n    console.log('No token found in localStorage');\n  }\n  return config;\n});\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","console","log","Authorization"],"sources":["/Users/mohamed/Downloads/project/BookApp/frontend/src/plugins/axios.js"],"sourcesContent":["// src/plugins/axios.js\nimport axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://blogi-36jo.onrender.com/api/auth',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n       \n\ninstance.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    console.log('Token found and added to headers:', token); // Add this log to debug\n    config.headers.Authorization = `Bearer ${token}`;\n  } else {\n    console.log('No token found in localStorage');\n  }\n  return config;\n});\n\n\nexport default instance;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE,0CAA0C;EACnDC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAGFH,QAAQ,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC5C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTG,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEJ,KAAK,CAAC,CAAC,CAAC;IACzDD,MAAM,CAACJ,OAAO,CAACU,aAAa,GAAG,UAAUL,KAAK,EAAE;EAClD,CAAC,MAAM;IACLG,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;EAC/C;EACA,OAAOL,MAAM;AACf,CAAC,CAAC;AAGF,eAAeP,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}