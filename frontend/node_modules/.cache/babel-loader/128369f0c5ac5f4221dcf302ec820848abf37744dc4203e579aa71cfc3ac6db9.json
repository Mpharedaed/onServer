{"ast":null,"code":"import { sendFriendRequest, acceptFriendRequest, blockFriendship, deleteFriendship, addInteraction, completeQuest, revealIdentity } from '@/services/friendshipService';\nexport default {\n  name: 'UserProfile',\n  props: {\n    user: {\n      type: Object,\n      required: true\n    }\n  },\n  methods: {\n    sendRequest() {\n      sendFriendRequest(this.user.id).then(response => alert(response.data.message)).catch(error => alert(error.response.data.error));\n    },\n    acceptRequest() {\n      acceptFriendRequest(this.user.id).then(response => alert(response.data.message)).catch(error => alert(error.response.data.error));\n    },\n    blockFriend() {\n      blockFriendship(this.user.id).then(response => alert(response.data.message)).catch(error => alert(error.response.data.error));\n    },\n    deleteFriend() {\n      deleteFriendship(this.user.id).then(response => alert(response.data.message)).catch(error => alert(error.response.data.error));\n    },\n    addFriendInteraction() {\n      addInteraction(this.user.id).then(response => alert(response.data.message)).catch(error => alert(error.response.data.error));\n    },\n    completeFriendQuest() {\n      completeQuest(this.user.id).then(response => alert(response.data.message)).catch(error => alert(error.response.data.error));\n    },\n    revealFriendIdentity() {\n      revealIdentity(this.user.id).then(response => alert(response.data.message)).catch(error => alert(error.response.data.error));\n    }\n  }\n};","map":{"version":3,"names":["sendFriendRequest","acceptFriendRequest","blockFriendship","deleteFriendship","addInteraction","completeQuest","revealIdentity","name","props","user","type","Object","required","methods","sendRequest","id","then","response","alert","data","message","catch","error","acceptRequest","blockFriend","deleteFriend","addFriendInteraction","completeFriendQuest","revealFriendIdentity"],"sources":["src/components/UserProfile.vue"],"sourcesContent":["<template>\r\n  <b-container>\r\n    <b-card>\r\n      <b-card-header>{{ user.username }}</b-card-header>\r\n      <b-card-body>\r\n        <p>User details here...</p>\r\n        <b-button variant=\"primary\" @click=\"sendRequest\">Send Friend Request</b-button>\r\n        <b-button variant=\"success\" @click=\"acceptRequest\">Accept Friend Request</b-button>\r\n        <b-button variant=\"danger\" @click=\"blockFriend\">Block Friend</b-button>\r\n        <b-button variant=\"warning\" @click=\"deleteFriend\">Delete Friend</b-button>\r\n        <b-button variant=\"info\" @click=\"addFriendInteraction\">Add Interaction</b-button>\r\n        <b-button variant=\"info\" @click=\"completeFriendQuest\">Complete Quest</b-button>\r\n        <b-button variant=\"secondary\" @click=\"revealFriendIdentity\">Reveal Identity</b-button>\r\n      </b-card-body>\r\n    </b-card>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport { sendFriendRequest, acceptFriendRequest, blockFriendship, deleteFriendship, addInteraction, completeQuest, revealIdentity } from '@/services/friendshipService';\r\n\r\nexport default {\r\n  name: 'UserProfile',\r\n  props: {\r\n    user: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  methods: {\r\n    sendRequest() {\r\n      sendFriendRequest(this.user.id).then(response => alert(response.data.message)).catch(error => alert(error.response.data.error));\r\n    },\r\n    acceptRequest() {\r\n      acceptFriendRequest(this.user.id).then(response => alert(response.data.message)).catch(error => alert(error.response.data.error));\r\n    },\r\n    blockFriend() {\r\n      blockFriendship(this.user.id).then(response => alert(response.data.message)).catch(error => alert(error.response.data.error));\r\n    },\r\n    deleteFriend() {\r\n      deleteFriendship(this.user.id).then(response => alert(response.data.message)).catch(error => alert(error.response.data.error));\r\n    },\r\n    addFriendInteraction() {\r\n      addInteraction(this.user.id).then(response => alert(response.data.message)).catch(error => alert(error.response.data.error));\r\n    },\r\n    completeFriendQuest() {\r\n      completeQuest(this.user.id).then(response => alert(response.data.message)).catch(error => alert(error.response.data.error));\r\n    },\r\n    revealFriendIdentity() {\r\n      revealIdentity(this.user.id).then(response => alert(response.data.message)).catch(error => alert(error.response.data.error));\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.profile-container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background: #f0f2f5;\r\n  border-radius: 10px;\r\n}\r\n\r\n.user-info-container {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.avatar-large {\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  margin-right: 20px;\r\n}\r\n\r\n.user-details {\r\n  flex-grow: 1;\r\n}\r\n\r\n.username {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin: 0;\r\n}\r\n\r\n.user-bio {\r\n  font-size: 16px;\r\n  color: #666;\r\n}\r\n\r\n.profile-nav {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.profile-nav button {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  background: #007bff;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  border-radius: 20px;\r\n  font-size: 16px;\r\n}\r\n\r\n.profile-nav button.active {\r\n  background: #0056b3;\r\n}\r\n\r\n.section-title {\r\n  font-size: 22px;\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.posts-container, .friends-container, .settings-container {\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.post-list, .friends-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.post-item, .friend-item {\r\n  background: #f9f9f9;\r\n  padding: 15px;\r\n  margin-bottom: 10px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.post-header, .friend-info {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.avatar, .avatar-small {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.post-content, .friend-name {\r\n  font-size: 16px;\r\n  color: #333;\r\n}\r\n\r\n.post-actions, .comment-section, .error-message {\r\n  border-top: 1px solid #e1e4e8;\r\n  padding-top: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.like-button, .comment-button, .share-button {\r\n  background: none;\r\n  border: none;\r\n  color: #007bff;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.like-button:hover, .comment-button:hover, .share-button:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.like-count, .no-posts, .no-friends {\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n.comment-input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #e1e4e8;\r\n  border-radius: 20px;\r\n  background: #f0f2f5;\r\n}\r\n\r\n.settings-container label {\r\n  display: block;\r\n  font-size: 14px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.settings-container input, .settings-container textarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #e1e4e8;\r\n  border-radius: 5px;\r\n}\r\n\r\n.save-button {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  background: #28a745;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n}\r\n\r\n.error-message {\r\n  color: #ff4d4d;\r\n  text-align: center;\r\n  font-size: 16px;\r\n}\r\n</style>\r\n"],"mappings":"AAmBA,SAAAA,iBAAA,EAAAC,mBAAA,EAAAC,eAAA,EAAAC,gBAAA,EAAAC,cAAA,EAAAC,aAAA,EAAAC,cAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,IAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACAd,iBAAA,MAAAS,IAAA,CAAAM,EAAA,EAAAC,IAAA,CAAAC,QAAA,IAAAC,KAAA,CAAAD,QAAA,CAAAE,IAAA,CAAAC,OAAA,GAAAC,KAAA,CAAAC,KAAA,IAAAJ,KAAA,CAAAI,KAAA,CAAAL,QAAA,CAAAE,IAAA,CAAAG,KAAA;IACA;IACAC,cAAA;MACAtB,mBAAA,MAAAQ,IAAA,CAAAM,EAAA,EAAAC,IAAA,CAAAC,QAAA,IAAAC,KAAA,CAAAD,QAAA,CAAAE,IAAA,CAAAC,OAAA,GAAAC,KAAA,CAAAC,KAAA,IAAAJ,KAAA,CAAAI,KAAA,CAAAL,QAAA,CAAAE,IAAA,CAAAG,KAAA;IACA;IACAE,YAAA;MACAtB,eAAA,MAAAO,IAAA,CAAAM,EAAA,EAAAC,IAAA,CAAAC,QAAA,IAAAC,KAAA,CAAAD,QAAA,CAAAE,IAAA,CAAAC,OAAA,GAAAC,KAAA,CAAAC,KAAA,IAAAJ,KAAA,CAAAI,KAAA,CAAAL,QAAA,CAAAE,IAAA,CAAAG,KAAA;IACA;IACAG,aAAA;MACAtB,gBAAA,MAAAM,IAAA,CAAAM,EAAA,EAAAC,IAAA,CAAAC,QAAA,IAAAC,KAAA,CAAAD,QAAA,CAAAE,IAAA,CAAAC,OAAA,GAAAC,KAAA,CAAAC,KAAA,IAAAJ,KAAA,CAAAI,KAAA,CAAAL,QAAA,CAAAE,IAAA,CAAAG,KAAA;IACA;IACAI,qBAAA;MACAtB,cAAA,MAAAK,IAAA,CAAAM,EAAA,EAAAC,IAAA,CAAAC,QAAA,IAAAC,KAAA,CAAAD,QAAA,CAAAE,IAAA,CAAAC,OAAA,GAAAC,KAAA,CAAAC,KAAA,IAAAJ,KAAA,CAAAI,KAAA,CAAAL,QAAA,CAAAE,IAAA,CAAAG,KAAA;IACA;IACAK,oBAAA;MACAtB,aAAA,MAAAI,IAAA,CAAAM,EAAA,EAAAC,IAAA,CAAAC,QAAA,IAAAC,KAAA,CAAAD,QAAA,CAAAE,IAAA,CAAAC,OAAA,GAAAC,KAAA,CAAAC,KAAA,IAAAJ,KAAA,CAAAI,KAAA,CAAAL,QAAA,CAAAE,IAAA,CAAAG,KAAA;IACA;IACAM,qBAAA;MACAtB,cAAA,MAAAG,IAAA,CAAAM,EAAA,EAAAC,IAAA,CAAAC,QAAA,IAAAC,KAAA,CAAAD,QAAA,CAAAE,IAAA,CAAAC,OAAA,GAAAC,KAAA,CAAAC,KAAA,IAAAJ,KAAA,CAAAI,KAAA,CAAAL,QAAA,CAAAE,IAAA,CAAAG,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}