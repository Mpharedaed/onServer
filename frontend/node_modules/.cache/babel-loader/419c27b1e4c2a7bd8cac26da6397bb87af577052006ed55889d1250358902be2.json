{"ast":null,"code":"import axiosInstance from '@/plugins/axios'; // Import the configured Axios instance\n\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      errorMessage: '',\n      resetPasswordLink: false\n    };\n  },\n  methods: {\n    async submitForm() {\n      this.errorMessage = ''; // Clear any previous error messages\n      this.resetPasswordLink = false; // Reset the link visibility\n      try {\n        const response = await axiosInstance.post('/login', {\n          email: this.username,\n          // Assuming the backend expects email, change if needed\n          password: this.password\n        });\n        if (response.data.token) {\n          localStorage.setItem('token', response.data.token);\n          this.$store.dispatch('login', response.data.token);\n          this.$router.push('/dashboard');\n        } else {\n          this.errorMessage = response.data.message || 'An error occurred. Please try again.';\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 401 && error.response.data.message === \"Email not confirmed\") {\n          this.errorMessage = 'Email not verified. Please check your email to verify your account.';\n        } else if (error.response && error.response.status === 404) {\n          this.errorMessage = 'User not found. Please register first.';\n        } else if (error.response && error.response.status === 401) {\n          this.errorMessage = error.response.data.message;\n          this.resetPasswordLink = true;\n        } else {\n          this.errorMessage = error.response ? error.response.data.message : 'An error occurred. Please try again.';\n        }\n      }\n    },\n    async resendVerificationEmail() {\n      try {\n        const response = await axiosInstance.post('/resend-verification', {\n          email: this.username // Assuming the username field contains the email\n        });\n        alert(response.data.message);\n      } catch (error) {\n        if (error.response && error.response.status === 429) {\n          alert('You have exceeded the number of allowed requests. Please try again later.');\n        } else {\n          alert(error.response ? error.response.data.message : 'An error occurred. Please try again.');\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axiosInstance","data","username","password","errorMessage","resetPasswordLink","methods","submitForm","response","post","email","token","localStorage","setItem","$store","dispatch","$router","push","message","error","status","resendVerificationEmail","alert"],"sources":["src/components/LoginForm.vue"],"sourcesContent":["<template>\n  <div class=\"login-page\">\n    <div class=\"login-container\">\n      <div class=\"image-section\">\n        <div class=\"overlay\">\n          <h2>Welcome Back</h2>\n          <p>Please login to continue.</p>\n        </div>\n      </div>\n      <div class=\"form-section\">\n        <h1>Login</h1>\n        <form @submit.prevent=\"submitForm\">\n          <div class=\"form-group\">\n            <label for=\"username\">Username</label>\n            <input type=\"text\" id=\"username\" v-model=\"username\" required>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" v-model=\"password\" required>\n          </div>\n          <button type=\"submit\" class=\"login-button\">Login</button>\n        </form>\n        <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\n        <p v-if=\"resetPasswordLink\" class=\"reset-link\">\n          Forgot your password? <router-link :to=\"{ name: 'ResetPasswordRequest' }\">Reset it here</router-link>\n        </p>\n        <p v-if=\"errorMessage === 'Email not verified. Please check your email to verify your account.'\">\n          Didn't receive an email? <button @click=\"resendVerificationEmail\">Resend Verification Email</button>\n        </p>\n        <p class=\"signup-text\">Don't have an account? <router-link to=\"/signup\">Sign Up</router-link></p>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport axiosInstance from '@/plugins/axios';  // Import the configured Axios instance\n\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      errorMessage: '',\n      resetPasswordLink: false\n    };\n  },\n  methods: {\n    async submitForm() {\n      this.errorMessage = '';  // Clear any previous error messages\n      this.resetPasswordLink = false; // Reset the link visibility\n      try {\n        const response = await axiosInstance.post('/login', {\n          email: this.username,  // Assuming the backend expects email, change if needed\n          password: this.password\n        });\n\n        if (response.data.token) {\n          localStorage.setItem('token', response.data.token);\n          this.$store.dispatch('login', response.data.token);\n          this.$router.push('/dashboard');\n        } else {\n          this.errorMessage = response.data.message || 'An error occurred. Please try again.';\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 401 && error.response.data.message === \"Email not confirmed\") {\n          this.errorMessage = 'Email not verified. Please check your email to verify your account.';\n        } else if (error.response && error.response.status === 404) {\n          this.errorMessage = 'User not found. Please register first.';\n        } else if (error.response && error.response.status === 401) {\n          this.errorMessage = error.response.data.message;\n          this.resetPasswordLink = true;\n        } else {\n          this.errorMessage = error.response ? error.response.data.message : 'An error occurred. Please try again.';\n        }\n      }\n    },\n    async resendVerificationEmail() {\n      try {\n        const response = await axiosInstance.post('/resend-verification', {\n          email: this.username  // Assuming the username field contains the email\n        });\n        alert(response.data.message);\n      } catch (error) {\n        if (error.response && error.response.status === 429) {\n          alert('You have exceeded the number of allowed requests. Please try again later.');\n        } else {\n          alert(error.response ? error.response.data.message : 'An error occurred. Please try again.');\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');\n\n.login-page {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background: linear-gradient(135deg, #6c63ff, #4a4ae1);\n  font-family: 'Roboto', sans-serif;\n  padding: 20px;\n  box-sizing: border-box;\n}\n\n.login-container {\n  display: flex;\n  background-color: white;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  max-width: 800px;\n  width: 100%;\n  flex-direction: row;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.login-container:hover {\n  transform: translateY(-10px);\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);\n}\n\n.image-section {\n  position: relative;\n  width: 50%;\n  background: url('https://images.unsplash.com/photo-1507525428034-b723cf961d3e?fit=crop&w=500&q=80') center center/cover no-repeat;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.overlay {\n  background: rgba(0, 0, 0, 0.6);\n  color: white;\n  padding: 40px;\n  text-align: center;\n}\n\n.overlay h2 {\n  margin-bottom: 20px;\n  font-size: 24px;\n  animation: fadeInDown 1s;\n}\n\n.overlay p {\n  font-size: 16px;\n  line-height: 1.5;\n  animation: fadeInUp 1s;\n}\n\n.form-section {\n  padding: 40px;\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.form-section h1 {\n  text-align: center;\n  margin-bottom: 10px;\n  font-size: 24px;\n  animation: fadeInDown 1s;\n}\n\n.form-group {\n  margin-bottom: 20px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 8px;\n  color: #333;\n  font-weight: 500;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-sizing: border-box;\n  font-size: 16px;\n}\n\n.login-button {\n  width: 100%;\n  padding: 12px;\n  background-color: #6c63ff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 16px;\n  margin-top: 20px;\n  transition: background-color 0.3s, transform 0.3s;\n}\n\n.login-button:hover {\n  background-color: #594acf;\n  transform: scale(1.05);\n}\n\n.signup-text {\n  text-align: center;\n  margin-top: 20px;\n}\n\n.signup-text a {\n  color: #6c63ff;\n  text-decoration: none;\n}\n\n.signup-text a:hover {\n  text-decoration: underline;\n}\n\n.message {\n  margin-top: 20px;\n  font-size: 14px;\n  color: red;\n  text-align: center;\n}\n\n@media (max-width: 768px) {\n  .login-container {\n    flex-direction: column;\n  }\n  \n  .image-section, .form-section {\n    width: 100%;\n  }\n\n  .image-section {\n    height: 200px;\n  }\n\n  .overlay {\n    padding: 20px;\n  }\n\n  .overlay h2 {\n    font-size: 20px;\n  }\n\n  .overlay p {\n    font-size: 14px;\n  }\n\n  .form-section {\n    padding: 20px;\n  }\n}\n\n@keyframes fadeInDown {\n  from {\n    opacity: 0;\n    transform: translateY(-20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@media (max-width: 730px) {\n  .form-group input[data-v-943f3ba8] {\n    width: 90%;\n    margin: 0 auto; /* Center the input field */\n  }\n  \n  .form-group input[data-v-8dac4566] {\n    width: 90%;\n    padding: 12px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    box-sizing: border-box;\n    font-size: 16px;}\n  \n    .login-button[data-v-8dac4566] {\n    width: 90%;\n    padding: 12px;\n    background-color: #6c63ff;\n    color: white;\n    }\n  }\n    \n</style>\n"],"mappings":"AAmCA,OAAAA,aAAA;;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,YAAA;MACAC,iBAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAA;MACA,KAAAH,YAAA;MACA,KAAAC,iBAAA;MACA;QACA,MAAAG,QAAA,SAAAR,aAAA,CAAAS,IAAA;UACAC,KAAA,OAAAR,QAAA;UAAA;UACAC,QAAA,OAAAA;QACA;QAEA,IAAAK,QAAA,CAAAP,IAAA,CAAAU,KAAA;UACAC,YAAA,CAAAC,OAAA,UAAAL,QAAA,CAAAP,IAAA,CAAAU,KAAA;UACA,KAAAG,MAAA,CAAAC,QAAA,UAAAP,QAAA,CAAAP,IAAA,CAAAU,KAAA;UACA,KAAAK,OAAA,CAAAC,IAAA;QACA;UACA,KAAAb,YAAA,GAAAI,QAAA,CAAAP,IAAA,CAAAiB,OAAA;QACA;MACA,SAAAC,KAAA;QACA,IAAAA,KAAA,CAAAX,QAAA,IAAAW,KAAA,CAAAX,QAAA,CAAAY,MAAA,YAAAD,KAAA,CAAAX,QAAA,CAAAP,IAAA,CAAAiB,OAAA;UACA,KAAAd,YAAA;QACA,WAAAe,KAAA,CAAAX,QAAA,IAAAW,KAAA,CAAAX,QAAA,CAAAY,MAAA;UACA,KAAAhB,YAAA;QACA,WAAAe,KAAA,CAAAX,QAAA,IAAAW,KAAA,CAAAX,QAAA,CAAAY,MAAA;UACA,KAAAhB,YAAA,GAAAe,KAAA,CAAAX,QAAA,CAAAP,IAAA,CAAAiB,OAAA;UACA,KAAAb,iBAAA;QACA;UACA,KAAAD,YAAA,GAAAe,KAAA,CAAAX,QAAA,GAAAW,KAAA,CAAAX,QAAA,CAAAP,IAAA,CAAAiB,OAAA;QACA;MACA;IACA;IACA,MAAAG,wBAAA;MACA;QACA,MAAAb,QAAA,SAAAR,aAAA,CAAAS,IAAA;UACAC,KAAA,OAAAR,QAAA;QACA;QACAoB,KAAA,CAAAd,QAAA,CAAAP,IAAA,CAAAiB,OAAA;MACA,SAAAC,KAAA;QACA,IAAAA,KAAA,CAAAX,QAAA,IAAAW,KAAA,CAAAX,QAAA,CAAAY,MAAA;UACAE,KAAA;QACA;UACAA,KAAA,CAAAH,KAAA,CAAAX,QAAA,GAAAW,KAAA,CAAAX,QAAA,CAAAP,IAAA,CAAAiB,OAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}