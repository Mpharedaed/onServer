{"ast":null,"code":"import Vue from 'vue';\nimport Router from 'vue-router';\nimport Home from '@/views/Home.vue';\nimport About from '@/views/About.vue';\nimport Dashboard from '@/views/Dashboard.vue';\nVue.use(Router);\nconst router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '/',\n    name: 'Home',\n    component: Home\n  }, {\n    path: '/about',\n    name: 'About',\n    component: About\n  }, {\n    path: '/dashboard',\n    name: 'Dashboard',\n    component: Dashboard,\n    meta: {\n      requiresAuth: true\n    }\n  }]\n});\n\n// Navigation guard to protect routes\nrouter.beforeEach((to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const isAuthenticated = !!localStorage.getItem('token');\n  if (requiresAuth && !isAuthenticated) {\n    next('/login');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","Router","Home","About","Dashboard","use","router","mode","base","process","env","BASE_URL","routes","path","name","component","meta","requiresAuth","beforeEach","to","from","next","matched","some","record","isAuthenticated","localStorage","getItem"],"sources":["C:/Users/moham/Downloads/bicobico/frontend/src/router/index.js"],"sourcesContent":["import Vue from 'vue';\r\nimport Router from 'vue-router';\r\nimport Home from '@/views/Home.vue';\r\nimport About from '@/views/About.vue';\r\nimport Dashboard from '@/views/Dashboard.vue';\r\n\r\nVue.use(Router);\r\n\r\nconst router = new Router({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'Home',\r\n      component: Home\r\n    },\r\n    {\r\n      path: '/about',\r\n      name: 'About',\r\n      component: About\r\n    },\r\n    {\r\n      path: '/dashboard',\r\n      name: 'Dashboard',\r\n      component: Dashboard,\r\n      meta: { requiresAuth: true }\r\n    }\r\n  ]\r\n});\r\n\r\n// Navigation guard to protect routes\r\nrouter.beforeEach((to, from, next) => {\r\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\r\n  const isAuthenticated = !!localStorage.getItem('token');\r\n\r\n  if (requiresAuth && !isAuthenticated) {\r\n    next('/login');\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,MAAM,MAAM,YAAY;AAC/B,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,SAAS,MAAM,uBAAuB;AAE7CJ,GAAG,CAACK,GAAG,CAACJ,MAAM,CAAC;AAEf,MAAMK,MAAM,GAAG,IAAIL,MAAM,CAAC;EACxBM,IAAI,EAAE,SAAS;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAC1BC,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,GAAG;IACTC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAEb;EACb,CAAC,EACD;IACEW,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,OAAO;IACbC,SAAS,EAAEZ;EACb,CAAC,EACD;IACEU,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE,WAAW;IACjBC,SAAS,EAAEX,SAAS;IACpBY,IAAI,EAAE;MAAEC,YAAY,EAAE;IAAK;EAC7B,CAAC;AAEL,CAAC,CAAC;;AAEF;AACAX,MAAM,CAACY,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMJ,YAAY,GAAGE,EAAE,CAACG,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACR,IAAI,CAACC,YAAY,CAAC;EACxE,MAAMQ,eAAe,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAEvD,IAAIV,YAAY,IAAI,CAACQ,eAAe,EAAE;IACpCJ,IAAI,CAAC,QAAQ,CAAC;EAChB,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAef,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}