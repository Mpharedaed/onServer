{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: 'AppHeader',\n  data() {\n    return {\n      menuOpen: false,\n      isScrolled: false\n    };\n  },\n  computed: {\n    ...mapGetters(['isAuthenticated'])\n  },\n  methods: {\n    ...mapActions(['logout']),\n    // Logout and close menu function\n    logoutAndCloseMenu() {\n      this.toggleMenu(); // Close the menu first\n      this.logout().then(() => {\n        this.$router.push('/login');\n      });\n    },\n    // Toggle mobile menu\n    toggleMenu() {\n      this.menuOpen = !this.menuOpen;\n      if (this.menuOpen) {\n        document.body.style.overflow = 'hidden'; // Prevent background scroll\n      } else {\n        document.body.style.overflow = 'auto'; // Restore background scroll\n      }\n    },\n    // Close mobile menu\n    closeMenu() {\n      this.menuOpen = false;\n      document.body.style.overflow = 'auto'; // Restore background scroll\n    },\n    // Handle navigation and close menu\n    navigate() {\n      this.closeMenu();\n    },\n    // Handle scroll event for header\n    handleScroll() {\n      this.isScrolled = window.scrollY > 50;\n    },\n    // Debounce for performance improvement on scroll\n    debounce(fn, delay) {\n      let timer = null;\n      return function (...args) {\n        clearTimeout(timer);\n        timer = setTimeout(() => fn.apply(this, args), delay);\n      };\n    }\n  },\n  mounted() {\n    this.handleScroll = this.debounce(this.handleScroll, 50); // Debounced scroll handling\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  beforeUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","name","data","menuOpen","isScrolled","computed","methods","logoutAndCloseMenu","toggleMenu","logout","then","$router","push","document","body","style","overflow","closeMenu","navigate","handleScroll","window","scrollY","debounce","fn","delay","timer","args","clearTimeout","setTimeout","apply","mounted","addEventListener","beforeUnmount","removeEventListener"],"sources":["src/views/HomePage.vue"],"sourcesContent":["<template>\n  <header class=\"header\" :class=\"{ scrolled: isScrolled }\">\n    <div class=\"container\">\n      <div class=\"logo\">\n        <router-link to=\"/\">\n          <!-- Ensure the image path is correct -->\n          <img\n            src=\"@/assets/logo.png\"\n            alt=\"Dawlat Emad Logo\"\n            class=\"logo-image\"\n          />\n        </router-link>\n      </div>\n      <nav class=\"navigation\">\n        <ul>\n          <li><router-link to=\"/\">Home</router-link></li>\n          <li><router-link to=\"/about\">About</router-link></li>\n          <li v-if=\"isAuthenticated\">\n            <router-link to=\"/dashboard\">Dashboard</router-link>\n          </li>\n          <li v-if=\"isAuthenticated\">\n            <router-link to=\"/profile\">Profile</router-link>\n          </li>\n          <li v-if=\"!isAuthenticated\">\n            <router-link to=\"/login\">Login</router-link>\n          </li>\n          <li v-if=\"isAuthenticated\">\n            <router-link to=\"/create-post\">Create Post</router-link>\n          </li>\n          <li v-if=\"isAuthenticated\">\n            <a href=\"#\" @click.prevent=\"logoutAndCloseMenu\">Logout</a>\n          </li>\n        </ul>\n      </nav>\n      <div :class=\"['menu-toggle', { open: menuOpen }]\" @click=\"toggleMenu\">\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <!-- Mobile Navigation Overlay -->\n    <transition name=\"fade\">\n      <div\n        class=\"mobile-navigation-overlay\"\n        v-if=\"menuOpen\"\n        @click.self=\"closeMenu\"\n      >\n        <nav class=\"mobile-navigation\">\n          <button class=\"close-button\" @click=\"closeMenu\">&times;</button>\n          <ul>\n            <li>\n              <router-link to=\"/\" @click=\"navigate\">Home</router-link>\n            </li>\n            <li>\n              <router-link to=\"/about\" @click=\"navigate\">About</router-link>\n            </li>\n            <li v-if=\"isAuthenticated\">\n              <router-link to=\"/dashboard\" @click=\"navigate\">Dashboard</router-link>\n            </li>\n            <li v-if=\"isAuthenticated\">\n              <router-link to=\"/profile\" @click=\"navigate\">Profile</router-link>\n            </li>\n            <li v-if=\"!isAuthenticated\">\n              <router-link to=\"/login\" @click=\"navigate\">Login</router-link>\n            </li>\n            <li v-if=\"isAuthenticated\">\n              <router-link to=\"/create-post\" @click=\"navigate\">Create Post</router-link>\n            </li>\n            <li v-if=\"isAuthenticated\">\n              <a href=\"#\" @click.prevent=\"logoutAndCloseMenu\">Logout</a>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </transition>\n  </header>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\n\nexport default {\n  name: 'AppHeader',\n  data() {\n    return {\n      menuOpen: false,\n      isScrolled: false,\n    };\n  },\n  computed: {\n    ...mapGetters(['isAuthenticated']),\n  },\n  methods: {\n    ...mapActions(['logout']),\n\n    // Logout and close menu function\n    logoutAndCloseMenu() {\n      this.toggleMenu(); // Close the menu first\n      this.logout().then(() => {\n        this.$router.push('/login');\n      });\n    },\n\n    // Toggle mobile menu\n    toggleMenu() {\n      this.menuOpen = !this.menuOpen;\n      if (this.menuOpen) {\n        document.body.style.overflow = 'hidden'; // Prevent background scroll\n      } else {\n        document.body.style.overflow = 'auto'; // Restore background scroll\n      }\n    },\n\n    // Close mobile menu\n    closeMenu() {\n      this.menuOpen = false;\n      document.body.style.overflow = 'auto'; // Restore background scroll\n    },\n\n    // Handle navigation and close menu\n    navigate() {\n      this.closeMenu();\n    },\n\n    // Handle scroll event for header\n    handleScroll() {\n      this.isScrolled = window.scrollY > 50;\n    },\n\n    // Debounce for performance improvement on scroll\n    debounce(fn, delay) {\n      let timer = null;\n      return function (...args) {\n        clearTimeout(timer);\n        timer = setTimeout(() => fn.apply(this, args), delay);\n      };\n    },\n  },\n  mounted() {\n    this.handleScroll = this.debounce(this.handleScroll, 50); // Debounced scroll handling\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  beforeUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  },\n};\n</script>\n\n<style src=\"./AppHeader.css\"></style>\n/* Import Fonts */\n@import url('https://fonts.googleapis.com/css2?family=SF+Pro+Display:wght@400;500;600;700&display=swap');\n\n/* General Header Styles */\n.header {\n  background: rgba(255, 255, 255, 0.7);\n  color: #333;\n  padding: 20px 30px;\n  position: fixed;\n  width: 100%;\n  z-index: 1000;\n  top: 0;\n  transition: background 0.3s ease, padding 0.3s ease, box-shadow 0.3s ease;\n  backdrop-filter: saturate(180%) blur(20px);\n}\n\n.header.scrolled {\n  background: rgba(255, 255, 255, 0.9);\n  padding: 15px 30px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n/* Container and Logo */\n.container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 1200px;\n  margin: 0 auto;\n  box-sizing: border-box;\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n}\n\n.logo-image {\n  height: 40px;\n  transition: transform 0.3s ease;\n}\n\n.logo-image:hover {\n  transform: scale(1.05);\n}\n\n/* Navigation Styles */\n.navigation {\n  display: flex;\n  align-items: center;\n}\n\n.navigation ul {\n  list-style: none;\n  display: flex;\n  gap: 30px;\n  margin: 0;\n  padding: 0;\n  font-family: 'SF Pro Display', sans-serif;\n  font-weight: 500;\n}\n\n.navigation ul li {\n  position: relative;\n}\n\n.navigation a {\n  color: #333;\n  text-decoration: none;\n  padding: 10px;\n  font-size: 1em;\n  transition: color 0.3s ease;\n}\n\n.navigation a:hover {\n  color: #007aff;\n}\n\n.navigation a::after {\n  content: '';\n  position: absolute;\n  left: 50%;\n  bottom: 0;\n  width: 0%;\n  height: 2px;\n  background-color: #007aff;\n  transition: width 0.3s ease, left 0.3s ease;\n}\n\n.navigation a:hover::after {\n  width: 100%;\n  left: 0;\n}\n\n/* Menu Toggle (Hamburger) */\n.menu-toggle {\n  display: none;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 24px;\n  height: 18px;\n  cursor: pointer;\n  transition: transform 0.3s ease;\n  z-index: 1100; /* Ensure it's above the overlay */\n}\n\n.menu-toggle span {\n  background: #333;\n  height: 2px;\n  width: 100%;\n  border-radius: 2px;\n  transition: transform 0.3s ease, opacity 0.3s ease;\n}\n\n.menu-toggle.open span:nth-child(1) {\n  transform: translateY(8px) rotate(45deg);\n}\n\n.menu-toggle.open span:nth-child(2) {\n  opacity: 0;\n}\n\n.menu-toggle.open span:nth-child(3) {\n  transform: translateY(-8px) rotate(-45deg);\n}\n\n/* Mobile Navigation Overlay */\n.mobile-navigation-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  background: rgba(255, 255, 255, 0.5);\n  backdrop-filter: blur(20px);\n  z-index: 999; /* Just below the menu toggle */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* Mobile Navigation */\n.mobile-navigation {\n  position: relative;\n  width: 80%;\n  max-width: 400px;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(30px);\n  border-radius: 20px;\n  padding: 40px 20px;\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);\n  animation: slideIn 0.3s ease forwards;\n}\n\n.mobile-navigation ul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  text-align: center;\n}\n\n.mobile-navigation ul li {\n  margin-bottom: 20px;\n}\n\n.mobile-navigation a {\n  color: #333;\n  font-size: 1.5em;\n  text-decoration: none;\n  transition: color 0.3s ease;\n  font-family: 'SF Pro Display', sans-serif;\n}\n\n.mobile-navigation a:hover {\n  color: #007aff;\n}\n\n/* Close Button for Mobile Navigation */\n.mobile-navigation .close-button {\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  background: none;\n  border: none;\n  font-size: 2rem;\n  color: #333;\n  cursor: pointer;\n  z-index: 1100;\n  padding: 10px;\n  transition: color 0.3s ease;\n}\n\n.mobile-navigation .close-button:hover {\n  color: #007aff;\n}\n\n/* Animations */\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n\n@keyframes slideIn {\n  from {\n    opacity: 0;\n    transform: translateY(-20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Media Queries */\n@media (max-width: 992px) {\n  .navigation {\n    display: none;\n  }\n\n  .menu-toggle {\n    display: flex;\n  }\n}\n\n@media (max-width: 768px) {\n  .logo-image {\n    height: 35px;\n  }\n\n  .header {\n    padding: 15px 20px;\n  }\n\n  .header.scrolled {\n    padding: 10px 20px;\n  }\n}\n"],"mappings":"AA+EA,SAAAA,UAAA,EAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAN,UAAA;EACA;EACAO,OAAA;IACA,GAAAN,UAAA;IAEA;IACAO,mBAAA;MACA,KAAAC,UAAA;MACA,KAAAC,MAAA,GAAAC,IAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;MACA;IACA;IAEA;IACAJ,WAAA;MACA,KAAAL,QAAA,SAAAA,QAAA;MACA,SAAAA,QAAA;QACAU,QAAA,CAAAC,IAAA,CAAAC,KAAA,CAAAC,QAAA;MACA;QACAH,QAAA,CAAAC,IAAA,CAAAC,KAAA,CAAAC,QAAA;MACA;IACA;IAEA;IACAC,UAAA;MACA,KAAAd,QAAA;MACAU,QAAA,CAAAC,IAAA,CAAAC,KAAA,CAAAC,QAAA;IACA;IAEA;IACAE,SAAA;MACA,KAAAD,SAAA;IACA;IAEA;IACAE,aAAA;MACA,KAAAf,UAAA,GAAAgB,MAAA,CAAAC,OAAA;IACA;IAEA;IACAC,SAAAC,EAAA,EAAAC,KAAA;MACA,IAAAC,KAAA;MACA,oBAAAC,IAAA;QACAC,YAAA,CAAAF,KAAA;QACAA,KAAA,GAAAG,UAAA,OAAAL,EAAA,CAAAM,KAAA,OAAAH,IAAA,GAAAF,KAAA;MACA;IACA;EACA;EACAM,QAAA;IACA,KAAAX,YAAA,QAAAG,QAAA,MAAAH,YAAA;IACAC,MAAA,CAAAW,gBAAA,gBAAAZ,YAAA;EACA;EACAa,cAAA;IACAZ,MAAA,CAAAa,mBAAA,gBAAAd,YAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}