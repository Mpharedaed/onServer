{"ast":null,"code":"import { getPotentialFriends, sendFriendRequest } from '@/services/userService';\nexport default {\n  name: 'PotentialFriends',\n  data() {\n    return {\n      potentialFriends: [],\n      error: null\n    };\n  },\n  created() {\n    this.fetchPotentialFriends();\n  },\n  methods: {\n    async fetchPotentialFriends() {\n      try {\n        const response = await getPotentialFriends();\n        this.potentialFriends = response.data.potential_friends;\n      } catch (error) {\n        console.error('Error fetching potential friends:', error);\n        this.error = 'Failed to fetch potential friends.';\n      }\n    },\n    async sendFriendRequest(userId) {\n      try {\n        await sendFriendRequest(userId);\n        alert('Friend request sent successfully!');\n        // Optionally, remove the user from the potential friends list\n        this.potentialFriends = this.potentialFriends.filter(user => user.id !== userId);\n      } catch (error) {\n        console.error('Error sending friend request:', error);\n        alert('Failed to send friend request.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["getPotentialFriends","sendFriendRequest","name","data","potentialFriends","error","created","fetchPotentialFriends","methods","response","potential_friends","console","userId","alert","filter","user","id"],"sources":["src/components/PotentialFriends.vue"],"sourcesContent":["<template>\r\n    <div class=\"potential-friends-container\">\r\n      <h2 class=\"section-title\">Find New Friends</h2>\r\n      <ul class=\"potential-friends-list\">\r\n        <li v-for=\"user in potentialFriends\" :key=\"user.id\" class=\"potential-friend-item\">\r\n          <img :src=\"user.avatar || 'default-avatar.png'\" alt=\"User Avatar\" class=\"avatar-small\">\r\n          <div class=\"user-info\">\r\n            <h3 class=\"username\">{{ user.name }}</h3>\r\n            <button @click=\"sendFriendRequest(user.id)\" class=\"add-friend-button\">Add Friend</button>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { getPotentialFriends, sendFriendRequest } from '@/services/userService';\r\n  \r\n  export default {\r\n    name: 'PotentialFriends',\r\n    data() {\r\n      return {\r\n        potentialFriends: [],\r\n        error: null,\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchPotentialFriends();\r\n    },\r\n    methods: {\r\n      async fetchPotentialFriends() {\r\n        try {\r\n          const response = await getPotentialFriends();\r\n          this.potentialFriends = response.data.potential_friends;\r\n        } catch (error) {\r\n          console.error('Error fetching potential friends:', error);\r\n          this.error = 'Failed to fetch potential friends.';\r\n        }\r\n      },\r\n      async sendFriendRequest(userId) {\r\n        try {\r\n          await sendFriendRequest(userId);\r\n          alert('Friend request sent successfully!');\r\n          // Optionally, remove the user from the potential friends list\r\n          this.potentialFriends = this.potentialFriends.filter(user => user.id !== userId);\r\n        } catch (error) {\r\n          console.error('Error sending friend request:', error);\r\n          alert('Failed to send friend request.');\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .potential-friends-container {\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    background: #f0f2f5;\r\n    border-radius: 10px;\r\n  }\r\n  \r\n  .section-title {\r\n    font-size: 22px;\r\n    margin-bottom: 10px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .potential-friends-list {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .potential-friend-item {\r\n    background: #fff;\r\n    padding: 15px;\r\n    margin-bottom: 10px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  \r\n  .avatar-small {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n    margin-right: 10px;\r\n  }\r\n  \r\n  .user-info {\r\n    flex-grow: 1;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  \r\n  .username {\r\n    font-size: 16px;\r\n    color: #333;\r\n  }\r\n  \r\n  .add-friend-button {\r\n    padding: 10px 20px;\r\n    border: none;\r\n    background: #007bff;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    border-radius: 20px;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .add-friend-button:hover {\r\n    background: #0056b3;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAgBA,SAAAA,mBAAA,EAAAC,iBAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,gBAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,qBAAA;EACA;EACAC,OAAA;IACA,MAAAD,sBAAA;MACA;QACA,MAAAE,QAAA,SAAAT,mBAAA;QACA,KAAAI,gBAAA,GAAAK,QAAA,CAAAN,IAAA,CAAAO,iBAAA;MACA,SAAAL,KAAA;QACAM,OAAA,CAAAN,KAAA,sCAAAA,KAAA;QACA,KAAAA,KAAA;MACA;IACA;IACA,MAAAJ,kBAAAW,MAAA;MACA;QACA,MAAAX,iBAAA,CAAAW,MAAA;QACAC,KAAA;QACA;QACA,KAAAT,gBAAA,QAAAA,gBAAA,CAAAU,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,EAAA,KAAAJ,MAAA;MACA,SAAAP,KAAA;QACAM,OAAA,CAAAN,KAAA,kCAAAA,KAAA;QACAQ,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}