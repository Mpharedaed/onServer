{"ast":null,"code":"import QuestionOption from './QuestionOption.vue';\nimport QuestionInput from './QuestionInput.vue';\nimport QuestionCheckbox from './QuestionCheckbox.vue';\nimport QuestionDate from './QuestionDate.vue';\nexport default {\n  name: 'StoryModal',\n  components: {\n    QuestionOption,\n    QuestionInput,\n    QuestionCheckbox,\n    QuestionDate\n  },\n  props: {\n    showStory: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      showQuestionnaire: false,\n      currentStep: 0,\n      answers: [],\n      questions: [{\n        title: 'مرحباً! لنخصص تجربتك.',\n        text: 'ما هي أهدافك الرئيسية في الحياة حالياً؟',\n        type: 'checkbox',\n        options: ['تطوير مهني', 'تحسين الصحة النفسية', 'بناء الثقة', 'تطوير القيادة', 'إدارة الوقت', 'تعلم مهارات جديدة']\n      }\n      // Additional questions...\n      ],\n      storyTitle: 'عن دولت عماد',\n      storyIntroduction: 'دولت عماد هي كوتش حياة شغوفة، مخصصة إنها تساعد الناس يكتشفوا إمكانياتهم الحقيقية ويحققوا أحلامهم.',\n      storySubtitle: 'تخصصات دولت تشمل:',\n      storyListItems: [{\n        title: 'بناء الثقة',\n        description: 'بتساعد السيدات يستعيدوا قوتهم وصوتهم في الحياة الشخصية والمهنية.'\n      }\n      // More items...\n      ],\n      storyConclusion: 'دولت معروفة بأسلوبها الدافئ والداعم. بتقدم مش بس أدوات عملية، لكن كمان بتدي الدعم النفسي اللي عملاءها بيحتاجوه عشان يحققوا النجاح.',\n      storyButtonText: 'ابدأ رحلتك الآن',\n      prevButtonText: 'السابق',\n      nextButtonText: 'التالي',\n      submitButtonText: 'إرسال'\n    };\n  },\n  computed: {\n    isModalVisible() {\n      return this.showStory || this.showQuestionnaire;\n    },\n    currentQuestion() {\n      return this.questions[this.currentStep] || {};\n    },\n    isLastStep() {\n      return this.currentStep === this.questions.length - 1;\n    },\n    questionComponent() {\n      return this.currentQuestion.type || 'input';\n    },\n    isCurrentStepValid() {\n      const answer = this.answers[this.currentStep];\n      // Validation logic, for example:\n      if (this.currentQuestion.type === 'input') {\n        return answer && this.validateEmail(answer);\n      } else if (this.currentQuestion.type === 'date') {\n        return !!answer;\n      }\n      // Add other validation checks here\n      return true; // Default to true if no specific checks are implemented\n    }\n  },\n  methods: {\n    closeModal() {\n      this.$emit('close');\n      this.showQuestionnaire = false;\n      this.currentStep = 0;\n      this.answers = [];\n      document.body.style.overflow = 'auto';\n    },\n    openQuestionnaire() {\n      this.showQuestionnaire = true;\n    },\n    nextStep() {\n      if (this.isCurrentStepValid && this.currentStep < this.questions.length - 1) {\n        this.currentStep++;\n      }\n    },\n    prevStep() {\n      if (this.currentStep > 0) {\n        this.currentStep--;\n      }\n    },\n    validateEmail(email) {\n      const re = /\\S+@\\S+\\.\\S+/;\n      return re.test(email);\n    },\n    submit() {\n      const userData = {\n        answers: this.answers,\n        email: this.answers.find(a => this.validateEmail(a))\n      };\n      console.log('User Data:', userData);\n      this.closeModal();\n      // Here you would typically send userData to your server\n    }\n  },\n  watch: {\n    currentStep(newStep) {\n      if (this.answers[newStep] === undefined) {\n        this.$set(this.answers, newStep, this.currentQuestion.type === 'checkbox' ? [] : '');\n      }\n    }\n  }\n};","map":{"version":3,"names":["QuestionOption","QuestionInput","QuestionCheckbox","QuestionDate","name","components","props","showStory","type","Boolean","default","data","showQuestionnaire","currentStep","answers","questions","title","text","options","storyTitle","storyIntroduction","storySubtitle","storyListItems","description","storyConclusion","storyButtonText","prevButtonText","nextButtonText","submitButtonText","computed","isModalVisible","currentQuestion","isLastStep","length","questionComponent","isCurrentStepValid","answer","validateEmail","methods","closeModal","$emit","document","body","style","overflow","openQuestionnaire","nextStep","prevStep","email","re","test","submit","userData","find","a","console","log","watch","newStep","undefined","$set"],"sources":["src/components/StoryModal.vue"],"sourcesContent":["<template>\n  <div v-if=\"isModalVisible\" class=\"modal-container\" @click.self=\"closeModal\">\n    <transition name=\"fade\" mode=\"out-in\">\n      <div v-if=\"!showQuestionnaire\" key=\"story\" class=\"story-content rtl\">\n        <button class=\"close-button\" @click=\"closeModal\" aria-label=\"Close modal\">&times;</button>\n        <h2 class=\"story-title\">{{ storyTitle }}</h2>\n        <p class=\"story-text\">{{ storyIntroduction }}</p>\n        <h3 class=\"story-subheading\">{{ storySubtitle }}</h3>\n        <ul class=\"story-list\">\n          <li v-for=\"(item, index) in storyListItems\" :key=\"index\">\n            <strong>{{ item.title }}:</strong> {{ item.description }}\n          </li>\n        </ul>\n        <p class=\"story-text\">{{ storyConclusion }}</p>\n        <button class=\"story-button\" @click=\"openQuestionnaire\">{{ storyButtonText }}</button>\n      </div>\n    </transition>\n\n    <transition name=\"slide\" mode=\"out-in\">\n      <div v-if=\"showQuestionnaire\" key=\"questionnaire\" class=\"questionnaire-content rtl\">\n        <button class=\"close-button\" @click=\"closeModal\" aria-label=\"Close modal\">&times;</button>\n        <transition name=\"fade\" mode=\"out-in\">\n          <div :key=\"currentStep\" class=\"step-content\">\n            <h2 class=\"question-title\">{{ currentQuestion.title }}</h2>\n            <template v-if=\"currentQuestion.text\">\n              <p>{{ currentQuestion.text }}</p>\n            </template>\n            <component \n              :is=\"questionComponent\" \n              :options=\"currentQuestion.options\" \n              :input-type=\"currentQuestion.inputType\" \n              v-model=\"answers[currentStep]\"\n            />\n            <div class=\"navigation-buttons\">\n              <button v-if=\"currentStep > 0\" @click=\"prevStep\" class=\"prev-button\">{{ prevButtonText }}</button>\n              <button \n                v-if=\"!isLastStep\" \n                @click=\"nextStep\" \n                class=\"next-button\" \n                :disabled=\"!isCurrentStepValid\">\n                {{ nextButtonText }}\n              </button>\n              <button \n                v-if=\"isLastStep\" \n                @click=\"submit\" \n                class=\"submit-button\" \n                :disabled=\"!isCurrentStepValid\">\n                {{ submitButtonText }}\n              </button>\n            </div>\n          </div>\n        </transition>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport QuestionOption from './QuestionOption.vue'\nimport QuestionInput from './QuestionInput.vue'\nimport QuestionCheckbox from './QuestionCheckbox.vue'\nimport QuestionDate from './QuestionDate.vue'\n\nexport default {\n  name: 'StoryModal',\n  components: {\n    QuestionOption,\n    QuestionInput,\n    QuestionCheckbox,\n    QuestionDate\n  },\n  props: {\n    showStory: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      showQuestionnaire: false,\n      currentStep: 0,\n      answers: [],\n      questions: [\n        {\n          title: 'مرحباً! لنخصص تجربتك.',\n          text: 'ما هي أهدافك الرئيسية في الحياة حالياً؟',\n          type: 'checkbox',\n          options: [\n            'تطوير مهني',\n            'تحسين الصحة النفسية',\n            'بناء الثقة',\n            'تطوير القيادة',\n            'إدارة الوقت',\n            'تعلم مهارات جديدة'\n          ]\n        },\n        // Additional questions...\n      ],\n      storyTitle: 'عن دولت عماد',\n      storyIntroduction: 'دولت عماد هي كوتش حياة شغوفة، مخصصة إنها تساعد الناس يكتشفوا إمكانياتهم الحقيقية ويحققوا أحلامهم.',\n      storySubtitle: 'تخصصات دولت تشمل:',\n      storyListItems: [\n        { title: 'بناء الثقة', description: 'بتساعد السيدات يستعيدوا قوتهم وصوتهم في الحياة الشخصية والمهنية.' },\n        // More items...\n      ],\n      storyConclusion: 'دولت معروفة بأسلوبها الدافئ والداعم. بتقدم مش بس أدوات عملية، لكن كمان بتدي الدعم النفسي اللي عملاءها بيحتاجوه عشان يحققوا النجاح.',\n      storyButtonText: 'ابدأ رحلتك الآن',\n      prevButtonText: 'السابق',\n      nextButtonText: 'التالي',\n      submitButtonText: 'إرسال'\n    }\n  },\n  computed: {\n    isModalVisible() {\n      return this.showStory || this.showQuestionnaire;\n    },\n    currentQuestion() {\n      return this.questions[this.currentStep] || {};\n    },\n    isLastStep() {\n      return this.currentStep === this.questions.length - 1;\n    },\n    questionComponent() {\n      return this.currentQuestion.type || 'input';\n    },\n    isCurrentStepValid() {\n      const answer = this.answers[this.currentStep];\n      // Validation logic, for example:\n      if (this.currentQuestion.type === 'input') {\n        return answer && this.validateEmail(answer);\n      } else if (this.currentQuestion.type === 'date') {\n        return !!answer;\n      }\n      // Add other validation checks here\n      return true; // Default to true if no specific checks are implemented\n    }\n  },\n  methods: {\n    closeModal() {\n      this.$emit('close');\n      this.showQuestionnaire = false;\n      this.currentStep = 0;\n      this.answers = [];\n      document.body.style.overflow = 'auto';\n    },\n    openQuestionnaire() {\n      this.showQuestionnaire = true;\n    },\n    nextStep() {\n      if (this.isCurrentStepValid && this.currentStep < this.questions.length - 1) {\n        this.currentStep++;\n      }\n    },\n    prevStep() {\n      if (this.currentStep > 0) {\n        this.currentStep--;\n      }\n    },\n    validateEmail(email) {\n      const re = /\\S+@\\S+\\.\\S+/;\n      return re.test(email);\n    },\n    submit() {\n      const userData = {\n        answers: this.answers,\n        email: this.answers.find(a => this.validateEmail(a))\n      };\n      console.log('User Data:', userData);\n      this.closeModal();\n      // Here you would typically send userData to your server\n    }\n  },\n  watch: {\n    currentStep(newStep) {\n      if (this.answers[newStep] === undefined) {\n        this.$set(this.answers, newStep, this.currentQuestion.type === 'checkbox' ? [] : '');\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* General Modal Styles */\n.modal-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(30, 30, 30, 0.9);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n/* Story and Questionnaire Content */\n.story-content,\n.questionnaire-content {\n  background: #fff;\n  width: 90%;\n  max-width: 800px;\n  padding: 2rem 3rem;\n  border-radius: 20px;\n  position: relative;\n  animation: fadeInUp 0.5s ease-in-out;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n/* Close Button */\n.close-button {\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  background: none;\n  border: none;\n  font-size: 2rem;\n  color: #999;\n  cursor: pointer;\n  z-index: 1100;\n  transition: color 0.3s ease;\n}\n.close-button:hover {\n  color: #333;\n}\n\n/* Titles */\n.story-title,\n.question-title {\n  font-size: 2.5rem;\n  margin-bottom: 1rem;\n  font-family: 'Cairo', sans-serif;\n  font-weight: 700;\n  color: #333;\n  text-align: center;\n}\n\n/* Text */\n.story-text,\n.question-body p {\n  font-size: 1.2rem;\n  line-height: 1.8;\n  color: #555;\n  margin-bottom: 1.5rem;\n  font-family: 'Cairo', sans-serif;\n  text-align: center;\n}\n\n/* Story List */\n.story-list {\n  list-style: none;\n  padding: 0;\n  margin-bottom: 2rem;\n}\n\n.story-list li {\n  font-size: 1.2rem;\n  line-height: 1.8;\n  margin-bottom: 1rem;\n  position: relative;\n  padding-right: 1.5rem;\n  font-family: 'Cairo', sans-serif;\n  color: #333;\n}\n.story-list li::before {\n  content: '✔';\n  position: absolute;\n  right: 0;\n  color: #ff6f61;\n  font-size: 1.5rem;\n}\n\n/* Story Button */\n.story-button {\n  background-color: #ff6f61;\n  color: #fff;\n  padding: 0.8rem 2rem;\n  border-radius: 30px;\n  font-size: 1rem;\n  transition: background-color 0.3s ease;\n  text-decoration: none;\n  display: inline-block;\n  cursor: pointer;\n  margin: 0 auto;\n  display: block;\n}\n.story-button:hover {\n  background-color: #e65b50;\n}\n\n/* Questionnaire Styles */\n.option-item,\n.checkbox-option {\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n  width: 100%;\n  max-width: 400px;\n}\n\n.option-item input[type='radio'],\n.checkbox-option input[type='checkbox'] {\n  accent-color: #ff6f61;\n  margin-left: 1rem;\n  transform: scale(1.2);\n}\n\n.option-item label,\n.checkbox-option label {\n  font-size: 1.2rem;\n  color: #333;\n  font-family: 'Cairo', sans-serif;\n  flex: 1;\n  text-align: right;\n}\n\n.text-input,\n.date-input {\n  width: 100%;\n  max-width: 400px;\n  padding: 0.7rem 1rem;\n  font-size: 1rem;\n  border: 1px solid #ccc;\n  border-radius: 30px;\n  outline: none;\n  text-align: center;\n  margin: 0 auto 1rem;\n  display: block;\n}\n\n/* Navigation Buttons */\n.navigation-buttons {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 1.5rem;\n}\n\n.prev-button,\n.next-button,\n.submit-button {\n  background-color: #ff6f61;\n  color: #fff;\n  padding: 0.7rem 1.5rem;\n  border: none;\n  border-radius: 30px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n.prev-button:hover,\n.next-button:hover,\n.submit-button:hover {\n  background-color: #e65b50;\n}\n.prev-button:disabled,\n.next-button:disabled,\n.submit-button:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n\n/* Animations */\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translate3d(0, 20px, 0);\n  }\n  to {\n    opacity: 1;\n    transform: translateZ(0);\n  }\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.5s ease;\n}\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\n\n.slide-enter-active,\n.slide-leave-active {\n  transition: all 0.5s ease;\n}\n.slide-enter,\n.slide-leave-to {\n  transform: translateY(100%);\n  opacity: 0;\n}\n\n/* Responsive Styles */\n@media (max-width: 768px) {\n  .story-content,\n  .questionnaire-content {\n    padding: 1rem;\n    max-width: 100%;\n    border-radius: 10px;\n  }\n\n  .story-title,\n  .question-title {\n    font-size: 2rem;\n  }\n\n  .option-item label,\n  .checkbox-option label {\n    font-size: 1rem;\n  }\n\n  .text-input,\n  .date-input {\n    font-size: 0.9rem;\n    padding: 0.6rem 1rem;\n  }\n\n  .navigation-buttons button {\n    font-size: 0.9rem;\n    padding: 0.6rem 1.2rem;\n  }\n\n  .close-button {\n    font-size: 1.5rem;\n    padding: 8px;\n  }\n}\n\n@media (max-width: 480px) {\n  .story-title,\n  .question-title {\n    font-size: 1.8rem;\n  }\n\n  .option-item label,\n  .checkbox-option label {\n    font-size: 0.9rem;\n  }\n\n  .text-input,\n  .date-input {\n    font-size: 0.8rem;\n    padding: 0.5rem 0.8rem;\n  }\n\n  .navigation-buttons button {\n    font-size: 0.8rem;\n    padding: 0.5rem 1rem;\n  }\n\n  .close-button {\n    font-size: 1.3rem;\n    padding: 6px;\n  }\n}\n</style>\n"],"mappings":"AA0DA,OAAAA,cAAA;AACA,OAAAC,aAAA;AACA,OAAAC,gBAAA;AACA,OAAAC,YAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAL,cAAA;IACAC,aAAA;IACAC,gBAAA;IACAC;EACA;EACAG,KAAA;IACAC,SAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,iBAAA;MACAC,WAAA;MACAC,OAAA;MACAC,SAAA,GACA;QACAC,KAAA;QACAC,IAAA;QACAT,IAAA;QACAU,OAAA,GACA,cACA,uBACA,cACA,iBACA,eACA;MAEA;MACA;MAAA,CACA;MACAC,UAAA;MACAC,iBAAA;MACAC,aAAA;MACAC,cAAA,GACA;QAAAN,KAAA;QAAAO,WAAA;MAAA;MACA;MAAA,CACA;MACAC,eAAA;MACAC,eAAA;MACAC,cAAA;MACAC,cAAA;MACAC,gBAAA;IACA;EACA;EACAC,QAAA;IACAC,eAAA;MACA,YAAAvB,SAAA,SAAAK,iBAAA;IACA;IACAmB,gBAAA;MACA,YAAAhB,SAAA,MAAAF,WAAA;IACA;IACAmB,WAAA;MACA,YAAAnB,WAAA,UAAAE,SAAA,CAAAkB,MAAA;IACA;IACAC,kBAAA;MACA,YAAAH,eAAA,CAAAvB,IAAA;IACA;IACA2B,mBAAA;MACA,MAAAC,MAAA,QAAAtB,OAAA,MAAAD,WAAA;MACA;MACA,SAAAkB,eAAA,CAAAvB,IAAA;QACA,OAAA4B,MAAA,SAAAC,aAAA,CAAAD,MAAA;MACA,gBAAAL,eAAA,CAAAvB,IAAA;QACA,SAAA4B,MAAA;MACA;MACA;MACA;IACA;EACA;EACAE,OAAA;IACAC,WAAA;MACA,KAAAC,KAAA;MACA,KAAA5B,iBAAA;MACA,KAAAC,WAAA;MACA,KAAAC,OAAA;MACA2B,QAAA,CAAAC,IAAA,CAAAC,KAAA,CAAAC,QAAA;IACA;IACAC,kBAAA;MACA,KAAAjC,iBAAA;IACA;IACAkC,SAAA;MACA,SAAAX,kBAAA,SAAAtB,WAAA,QAAAE,SAAA,CAAAkB,MAAA;QACA,KAAApB,WAAA;MACA;IACA;IACAkC,SAAA;MACA,SAAAlC,WAAA;QACA,KAAAA,WAAA;MACA;IACA;IACAwB,cAAAW,KAAA;MACA,MAAAC,EAAA;MACA,OAAAA,EAAA,CAAAC,IAAA,CAAAF,KAAA;IACA;IACAG,OAAA;MACA,MAAAC,QAAA;QACAtC,OAAA,OAAAA,OAAA;QACAkC,KAAA,OAAAlC,OAAA,CAAAuC,IAAA,CAAAC,CAAA,SAAAjB,aAAA,CAAAiB,CAAA;MACA;MACAC,OAAA,CAAAC,GAAA,eAAAJ,QAAA;MACA,KAAAb,UAAA;MACA;IACA;EACA;EACAkB,KAAA;IACA5C,YAAA6C,OAAA;MACA,SAAA5C,OAAA,CAAA4C,OAAA,MAAAC,SAAA;QACA,KAAAC,IAAA,MAAA9C,OAAA,EAAA4C,OAAA,OAAA3B,eAAA,CAAAvB,IAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}