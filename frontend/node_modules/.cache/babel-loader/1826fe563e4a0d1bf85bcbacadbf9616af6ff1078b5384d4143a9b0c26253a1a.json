{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'PotentialFriends',\n  data() {\n    return {\n      potentialFriends: [],\n      error: null,\n      loading: true\n    };\n  },\n  created() {\n    this.fetchPotentialFriends();\n  },\n  methods: {\n    async fetchPotentialFriends() {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://127.0.0.1:5000/api/potential_friends', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.potentialFriends = response.data.potential_friends;\n      } catch (error) {\n        console.error('Error fetching potential friends:', error);\n        this.error = 'Failed to fetch potential friends.';\n      } finally {\n        this.loading = false;\n      }\n    },\n    async sendFriendRequest(userId) {\n      try {\n        const token = localStorage.getItem('token');\n        await axios.post(`http://127.0.0.1:5000/api/add`, {\n          user2_id: userId\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert('Friend request sent successfully!');\n        this.potentialFriends = this.potentialFriends.filter(user => user.id !== userId);\n      } catch (error) {\n        console.error('Error sending friend request:', error);\n        alert('Failed to send friend request.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","potentialFriends","error","loading","created","fetchPotentialFriends","methods","token","localStorage","getItem","response","get","headers","Authorization","potential_friends","console","sendFriendRequest","userId","post","user2_id","alert","filter","user","id"],"sources":["src/components/UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"potential-friends-container\">\r\n    <h2 class=\"section-title\">Find New Friends</h2>\r\n    <ul class=\"potential-friends-list\">\r\n      <li v-for=\"user in potentialFriends\" :key=\"user.id\" class=\"potential-friend-item\">\r\n        <img :src=\"user.avatar || 'default-avatar.png'\" alt=\"User Avatar\" class=\"avatar-small\">\r\n        <div class=\"user-info\">\r\n          <h3 class=\"username\">{{ user.name }}</h3>\r\n          <button @click=\"sendFriendRequest(user.id)\" class=\"add-friend-button\">Add Friend</button>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\r\n    <div v-if=\"loading\" class=\"loading-message\">Loading...</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'PotentialFriends',\r\n  data() {\r\n    return {\r\n      potentialFriends: [],\r\n      error: null,\r\n      loading: true,\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchPotentialFriends();\r\n  },\r\n  methods: {\r\n    async fetchPotentialFriends() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://127.0.0.1:5000/api/potential_friends', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        this.potentialFriends = response.data.potential_friends;\r\n      } catch (error) {\r\n        console.error('Error fetching potential friends:', error);\r\n        this.error = 'Failed to fetch potential friends.';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async sendFriendRequest(userId) {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        await axios.post(`http://127.0.0.1:5000/api/add`, { user2_id: userId }, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        alert('Friend request sent successfully!');\r\n        this.potentialFriends = this.potentialFriends.filter(user => user.id !== userId);\r\n      } catch (error) {\r\n        console.error('Error sending friend request:', error);\r\n        alert('Failed to send friend request.');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.profile-container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background: #f0f2f5;\r\n  border-radius: 10px;\r\n}\r\n\r\n.user-info-container {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.avatar-large {\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  margin-right: 20px;\r\n}\r\n\r\n.user-details {\r\n  flex-grow: 1;\r\n}\r\n\r\n.username {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin: 0;\r\n}\r\n\r\n.user-bio {\r\n  font-size: 16px;\r\n  color: #666;\r\n}\r\n\r\n.profile-nav {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.profile-nav button {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  background: #007bff;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  border-radius: 20px;\r\n  font-size: 16px;\r\n}\r\n\r\n.profile-nav button.active {\r\n  background: #0056b3;\r\n}\r\n\r\n.section-title {\r\n  font-size: 22px;\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.posts-container, .friends-container, .settings-container {\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.post-list, .friends-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.post-item, .friend-item {\r\n  background: #f9f9f9;\r\n  padding: 15px;\r\n  margin-bottom: 10px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.post-header, .friend-info {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.avatar, .avatar-small {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.post-content, .friend-name {\r\n  font-size: 16px;\r\n  color: #333;\r\n}\r\n\r\n.post-actions, .comment-section, .error-message {\r\n  border-top: 1px solid #e1e4e8;\r\n  padding-top: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.like-button, .comment-button, .share-button {\r\n  background: none;\r\n  border: none;\r\n  color: #007bff;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.like-button:hover, .comment-button:hover, .share-button:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.like-count, .no-posts, .no-friends {\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n.comment-input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #e1e4e8;\r\n  border-radius: 20px;\r\n  background: #f0f2f5;\r\n}\r\n\r\n.settings-container label {\r\n  display: block;\r\n  font-size: 14px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.settings-container input, .settings-container textarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #e1e4e8;\r\n  border-radius: 5px;\r\n}\r\n\r\n.save-button {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  background: #28a745;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n}\r\n\r\n.error-message {\r\n  color: #ff4d4d;\r\n  text-align: center;\r\n  font-size: 16px;\r\n}\r\n</style>\r\n"],"mappings":"AAkBA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,gBAAA;MACAC,KAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,qBAAA;EACA;EACAC,OAAA;IACA,MAAAD,sBAAA;MACA;QACA,MAAAE,KAAA,GAAAC,YAAA,CAAAC,OAAA;QACA,MAAAC,QAAA,SAAAZ,KAAA,CAAAa,GAAA;UACAC,OAAA;YACAC,aAAA,YAAAN,KAAA;UACA;QACA;QACA,KAAAN,gBAAA,GAAAS,QAAA,CAAAV,IAAA,CAAAc,iBAAA;MACA,SAAAZ,KAAA;QACAa,OAAA,CAAAb,KAAA,sCAAAA,KAAA;QACA,KAAAA,KAAA;MACA;QACA,KAAAC,OAAA;MACA;IACA;IACA,MAAAa,kBAAAC,MAAA;MACA;QACA,MAAAV,KAAA,GAAAC,YAAA,CAAAC,OAAA;QACA,MAAAX,KAAA,CAAAoB,IAAA;UAAAC,QAAA,EAAAF;QAAA;UACAL,OAAA;YACAC,aAAA,YAAAN,KAAA;UACA;QACA;QACAa,KAAA;QACA,KAAAnB,gBAAA,QAAAA,gBAAA,CAAAoB,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,EAAA,KAAAN,MAAA;MACA,SAAAf,KAAA;QACAa,OAAA,CAAAb,KAAA,kCAAAA,KAAA;QACAkB,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}