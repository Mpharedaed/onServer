{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      posts: [],\n      user: null,\n      error: null\n    };\n  },\n  created() {\n    this.fetchPosts();\n    if (this.isAuthenticated) {\n      this.user = this.$store.getters.getUser;\n      if (this.user) {\n        console.log('User data:', this.user);\n        this.fetchUserPosts();\n      } else {\n        this.error = 'User data not found.';\n      }\n    } else {\n      this.error = 'You need to be logged in to view this page.';\n    }\n  },\n  methods: {\n    async fetchPosts() {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/user/posts', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.posts = response.data.posts;\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    },\n    async likePost(post) {\n      try {\n        await axios.post(`http://127.0.0.1:5000/api/user/posts/${post.id}/like`, {}, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        post.likes += 1;\n      } catch (error) {\n        console.error('Error liking post:', error);\n      }\n    },\n    formatDate(date) {\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      return new Date(date).toLocaleDateString(undefined, options);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","posts","user","error","created","fetchPosts","isAuthenticated","$store","getters","getUser","console","log","fetchUserPosts","methods","response","get","headers","Authorization","localStorage","getItem","likePost","post","id","likes","formatDate","date","options","year","month","day","Date","toLocaleDateString","undefined"],"sources":["src/components/UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"post-container\">\r\n    <h2 class=\"post-title\">My Posts</h2>\r\n    <ul class=\"post-list\">\r\n      <li v-for=\"post in posts\" :key=\"post.id\" class=\"post-item\">\r\n        <div class=\"post-header\">\r\n          <img v-if=\"!post.is_anonymous\" :src=\"post.user.avatar || 'default-avatar.png'\" alt=\"User Avatar\" class=\"avatar\">\r\n          <div class=\"user-info\">\r\n            <h3 class=\"username\">{{ post.is_anonymous ? 'Anonymous' : (post.user.name || 'Anonymous') }}</h3>\r\n            <p class=\"post-date\">{{ formatDate(post.created_at) }}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"post-content\">{{ post.content }}</div>\r\n        <div class=\"post-actions\">\r\n          <button @click=\"likePost(post)\" class=\"like-button\">üëç Like</button>\r\n          <span class=\"like-count\">{{ post.likes }} Likes</span>\r\n          <button class=\"comment-button\">üí¨ Comment</button>\r\n          <button class=\"share-button\">üîó Share</button>\r\n        </div>\r\n        <div class=\"comment-section\">\r\n          <input type=\"text\" class=\"comment-input\" placeholder=\"Write a comment...\" />\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <p v-if=\"posts.length === 0\" class=\"no-posts\">You have no posts.</p>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      user: null,\r\n      error: null,\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchPosts();\r\n    if (this.isAuthenticated) {\r\n      this.user = this.$store.getters.getUser;\r\n      if (this.user) {\r\n        console.log('User data:', this.user);\r\n        this.fetchUserPosts();\r\n      } else {\r\n        this.error = 'User data not found.';\r\n      }\r\n    } else {\r\n      this.error = 'You need to be logged in to view this page.';\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchPosts() {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:5000/api/user/posts', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n        this.posts = response.data.posts;\r\n      } catch (error) {\r\n        console.error('Error fetching posts:', error);\r\n      }\r\n    },\r\n    async likePost(post) {\r\n      try {\r\n        await axios.post(`http://127.0.0.1:5000/api/user/posts/${post.id}/like`, {}, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n        post.likes += 1;\r\n      } catch (error) {\r\n        console.error('Error liking post:', error);\r\n      }\r\n    },\r\n    formatDate(date) {\r\n      const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n      return new Date(date).toLocaleDateString(undefined, options);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.post-container {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background: #f0f2f5;\r\n  border-radius: 10px;\r\n}\r\n\r\n.post-title {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n  color: #444;\r\n}\r\n\r\n.post-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.post-item {\r\n  background: #fff;\r\n  padding: 15px;\r\n  margin-bottom: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n  border: 1px solid #e1e4e8;\r\n}\r\n\r\n.post-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.user-info {\r\n  flex-grow: 1;\r\n}\r\n\r\n.username {\r\n  margin: 0;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n\r\n.post-date {\r\n  margin: 0;\r\n  font-size: 12px;\r\n  color: #888;\r\n}\r\n\r\n.post-content {\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n}\r\n\r\n.post-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid #e1e4e8;\r\n  padding-top: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.like-button,\r\n.comment-button,\r\n.share-button {\r\n  background: none;\r\n  border: none;\r\n  color: #007bff;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.like-button:hover,\r\n.comment-button:hover,\r\n.share-button:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.like-count {\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n.comment-section {\r\n  border-top: 1px solid #e1e4e8;\r\n  padding-top: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.comment-input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #e1e4e8;\r\n  border-radius: 20px;\r\n  background: #f0f2f5;\r\n}\r\n\r\n.no-posts {\r\n  text-align: center;\r\n  font-size: 18px;\r\n  color: #777;\r\n}\r\n</style>\r\n"],"mappings":"AA8BA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,IAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;IACA,SAAAC,eAAA;MACA,KAAAJ,IAAA,QAAAK,MAAA,CAAAC,OAAA,CAAAC,OAAA;MACA,SAAAP,IAAA;QACAQ,OAAA,CAAAC,GAAA,oBAAAT,IAAA;QACA,KAAAU,cAAA;MACA;QACA,KAAAT,KAAA;MACA;IACA;MACA,KAAAA,KAAA;IACA;EACA;EACAU,OAAA;IACA,MAAAR,WAAA;MACA;QACA,MAAAS,QAAA,SAAAf,KAAA,CAAAgB,GAAA;UACAC,OAAA;YACAC,aAAA,YAAAC,YAAA,CAAAC,OAAA;UACA;QACA;QACA,KAAAlB,KAAA,GAAAa,QAAA,CAAAd,IAAA,CAAAC,KAAA;MACA,SAAAE,KAAA;QACAO,OAAA,CAAAP,KAAA,0BAAAA,KAAA;MACA;IACA;IACA,MAAAiB,SAAAC,IAAA;MACA;QACA,MAAAtB,KAAA,CAAAsB,IAAA,yCAAAA,IAAA,CAAAC,EAAA;UACAN,OAAA;YACAC,aAAA,YAAAC,YAAA,CAAAC,OAAA;UACA;QACA;QACAE,IAAA,CAAAE,KAAA;MACA,SAAApB,KAAA;QACAO,OAAA,CAAAP,KAAA,uBAAAA,KAAA;MACA;IACA;IACAqB,WAAAC,IAAA;MACA,MAAAC,OAAA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,GAAA;MAAA;MACA,WAAAC,IAAA,CAAAL,IAAA,EAAAM,kBAAA,CAAAC,SAAA,EAAAN,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}